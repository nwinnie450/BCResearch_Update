{
  "generated_at": 1755403256,
  "generated_at_iso": "2025-08-17 04:00:56 UTC",
  "count": 302,
  "protocol": "tron",
  "source": "https://github.com/tronprotocol/TIPs",
  "items": [
    {
      "title": "Fork from ERC-4907 Rental NFT",
      "status": "Final",
      "author": "lopeed_prcy",
      "created": "2023-05-15",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This standard is an extension of [TIP-721](./tip-721.md). It proposes an additional role (`user`) which can be granted to addresses, and a time where the role is automatically revoked (`expires`). The `user` role represents permission to \"use\" the NFT, but not the ability to transfer it or set users...",
      "id": "TIP-4906",
      "number": 4906,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-4906.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-4906.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Fork from ERC-4907 Rental NFT",
      "status": "Final",
      "author": "lopeed_prcy",
      "created": "2023-05-15",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This standard is an extension of [TIP-721](./tip-721.md). It proposes an additional role (`user`) which can be granted to addresses, and a time where the role is automatically revoked (`expires`). The `user` role represents permission to \"use\" the NFT, but not the ability to transfer it or set users...",
      "id": "TIP-4906",
      "number": 4906,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-4906.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-4906.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Fork from ERC-4907 Rental NFT",
      "status": "Final",
      "author": "lopeed_prcy",
      "created": "2023-05-15",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This standard is an extension of [TIP-721](./tip-721.md). It proposes an additional role (`user`) which can be granted to addresses, and a time where the role is automatically revoked (`expires`). The `user` role represents permission to \"use\" the NFT, but not the ability to transfer it or set users...",
      "id": "TIP-4906",
      "number": 4906,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-4906.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-4906.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Wallet Switch TRON Chain Method",
      "status": "Final",
      "author": "Aaron",
      "created": "2022-09-05",
      "type": "Unknown",
      "category": "Interface",
      "summary": "- [Table of Contents](#table-of-contents) - [Simple Summary](#simple-summary) - [Abstract](#abstract)...",
      "id": "TIP-3326",
      "number": 3326,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-3326.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-3326.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Wallet Switch TRON Chain Method",
      "status": "Final",
      "author": "Aaron",
      "created": "2022-09-05",
      "type": "Unknown",
      "category": "Interface",
      "summary": "- [Table of Contents](#table-of-contents) - [Simple Summary](#simple-summary) - [Abstract](#abstract)...",
      "id": "TIP-3326",
      "number": 3326,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-3326.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-3326.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Wallet Switch TRON Chain Method",
      "status": "Final",
      "author": "Aaron",
      "created": "2022-09-05",
      "type": "Unknown",
      "category": "Interface",
      "summary": "- [Table of Contents](#table-of-contents) - [Simple Summary](#simple-summary) - [Abstract](#abstract)...",
      "id": "TIP-3326",
      "number": 3326,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-3326.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-3326.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRON Provider JavaScript API",
      "status": "Final",
      "author": "Aaron",
      "created": "2022-09-26",
      "type": "Unknown",
      "category": "Interface",
      "summary": "- [Table of Contents](#table-of-contents) - [Summary](#summary) - [Abstract](#abstract)...",
      "id": "TIP-1193",
      "number": 1193,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-1193.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-1193.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRON Provider JavaScript API",
      "status": "Final",
      "author": "Aaron",
      "created": "2022-09-26",
      "type": "Unknown",
      "category": "Interface",
      "summary": "- [Table of Contents](#table-of-contents) - [Summary](#summary) - [Abstract](#abstract)...",
      "id": "TIP-1193",
      "number": 1193,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-1193.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-1193.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRON Provider JavaScript API",
      "status": "Final",
      "author": "Aaron",
      "created": "2022-09-26",
      "type": "Unknown",
      "category": "Interface",
      "summary": "- [Table of Contents](#table-of-contents) - [Summary](#summary) - [Abstract](#abstract)...",
      "id": "TIP-1193",
      "number": 1193,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-1193.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-1193.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Multi Token Standard",
      "status": "Final",
      "author": "yanghang8612@163.com",
      "created": "2022-07-25",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "A standard interface for contracts that manage multiple token types. A single deployed contract may include any combination of fungible tokens, non-fungible tokens or other configurations (e.g. semi-fungible tokens). This TIP is compatible with [EIP-1155](https://eips.ethereum.org/EIPS/eip-1155). Th...",
      "id": "TIP-1155",
      "number": 1155,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-1155.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-1155.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Multi Token Standard",
      "status": "Final",
      "author": "yanghang8612@163.com",
      "created": "2022-07-25",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "A standard interface for contracts that manage multiple token types. A single deployed contract may include any combination of fungible tokens, non-fungible tokens or other configurations (e.g. semi-fungible tokens). This TIP is compatible with [EIP-1155](https://eips.ethereum.org/EIPS/eip-1155). Th...",
      "id": "TIP-1155",
      "number": 1155,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-1155.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-1155.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Multi Token Standard",
      "status": "Final",
      "author": "yanghang8612@163.com",
      "created": "2022-07-25",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "A standard interface for contracts that manage multiple token types. A single deployed contract may include any combination of fungible tokens, non-fungible tokens or other configurations (e.g. semi-fungible tokens). This TIP is compatible with [EIP-1155](https://eips.ethereum.org/EIPS/eip-1155). Th...",
      "id": "TIP-1155",
      "number": 1155,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-1155.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-1155.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Opt-in account exposure",
      "status": "Final",
      "author": "Aaron",
      "created": "2022-09-05",
      "type": "Unknown",
      "category": "Interface",
      "summary": "- [Table of Contents](#table-of-contents) - [Simple Summary](#simple-summary) - [Motivation](#motivation)...",
      "id": "TIP-1102",
      "number": 1102,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-1102.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-1102.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Opt-in account exposure",
      "status": "Final",
      "author": "Aaron",
      "created": "2022-09-05",
      "type": "Unknown",
      "category": "Interface",
      "summary": "- [Table of Contents](#table-of-contents) - [Simple Summary](#simple-summary) - [Motivation](#motivation)...",
      "id": "TIP-1102",
      "number": 1102,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-1102.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-1102.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Opt-in account exposure",
      "status": "Final",
      "author": "Aaron",
      "created": "2022-09-05",
      "type": "Unknown",
      "category": "Interface",
      "summary": "- [Table of Contents](#table-of-contents) - [Simple Summary](#simple-summary) - [Motivation](#motivation)...",
      "id": "TIP-1102",
      "number": 1102,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-1102.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-1102.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Introduce EIP-4844 and EIP-7516 instructions",
      "status": "Final",
      "author": "lei19942016@hotmail.com",
      "created": "2025-03-28",
      "type": "Standards Track",
      "category": "VM",
      "summary": "As part of the Ethereum Cancun upgrade, instructions in [EIP-4844: Shard Blob Transactions](https://eips.ethereum.org/EIPS/eip-4844) and [EIP-7516: BLOBBASEFEE instruction](https://eips.ethereum.org/EIPS/eip-7516) are required to be implemented to TRON. Introduce `BLOBHASH` (`0x49`) and `BLOBBASEFEE...",
      "id": "TIP-745",
      "number": 745,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-745.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-745.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-721 Non-Fungible Token Standard",
      "status": "Final",
      "author": "timothychung",
      "created": "2020-11-20",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "A standard interface for non-fungible tokens. This TIP is compatible with [EIP-721](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md) We note that NFTs standard is widely used in different fields of blockchain....",
      "id": "TIP-721",
      "number": 721,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-721.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-721.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRON typed structured data hashing and signing",
      "status": "Final",
      "author": "yanghang8612@163.com",
      "created": "2022-07-25",
      "type": "Standards Track",
      "category": "Interface",
      "summary": "This TIP introduces a standard for hashing and signing of typed structured data as opposed to just bytestrings into TRON protocol to solve the problem that hashing structured data is non-trivial and errors result in loss of the security properties of the system, etc. The encoding function, hashing a...",
      "id": "TIP-712",
      "number": 712,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-712.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-712.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Migrate Floating-Point Calculations from Math to StrictMath",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2024-10-30",
      "type": "Standards Track",
      "category": "Core",
      "summary": "&ensp;&ensp; This TIP proposes migrating Java-Tron's floating-point calculation library from [java.lang.Math](https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html) to [java.lang.StrictMath](https://docs.oracle.com/javase/8/docs/api/java/lang/StrictMath.html) while keeping data consistent an...",
      "id": "TIP-697",
      "number": 697,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-697.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-697.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Enhance Verification of Transaction Limitation at Consensus Layer",
      "status": "Final",
      "author": "lxcmyf@gmail.com",
      "created": "2024-10-24",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP aims to impose restrictions on account creation transactions, excessively large transactions, multi-result transactions, and near-expiry transactions at the consensus layer to enhance the consistency and stability of transaction processing. As the TRON network evolves, its security and effi...",
      "id": "TIP-694",
      "number": 694,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-694.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-694.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Adjust energy cost of SUICIDE and VOTEWITNESS opcodes in TVM",
      "status": "Final",
      "author": "yanghang8612@163.com",
      "created": "2024-04-30",
      "type": "Standards Track",
      "category": "VM",
      "summary": "This TIP aims to adjust the energy cost of TVM opcodes based on actual resource consumption. Adjust the energy cost for several opcodes (such as `SUICIDE` and `VOTEWITNESS`) in TVM to better reflect the actual resource consumption of opcode execution and to ensure that the costs are reasonable. The ...",
      "id": "TIP-653",
      "number": 653,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-653.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-653.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Announce EIP-6049 Deprecate SELFDESTRUCT",
      "status": "Final",
      "author": "yanghang8612@163.com",
      "created": "2024-04-10",
      "type": "Meta",
      "category": "VM",
      "summary": "The `SELFDESTRUCT` opcode has been deprecated after the Ethereum Shanghai upgrade and its behavior has been modified after the Ethereum Cancun upgrade. For compatibility, [EIP-6049: Deprecate SELFDESTRUCT](https://eips.ethereum.org/EIPS/eip-6049) is required to be announced in the TRON community fir...",
      "id": "TIP-652",
      "number": 652,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-652.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-652.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Implement EIP-5656 MCOPY - Memory copying instruction",
      "status": "Final",
      "author": "yanghang8612@163.com",
      "created": "2024-03-29",
      "type": "Standards Track",
      "category": "VM",
      "summary": "As part of the Ethereum Cancun upgrade, [EIP-5656: MCOPY - Memory copying instruction](https://eips.ethereum.org/EIPS/eip-5656) is required to be implemented to TRON. Provide an efficient EVM instruction for copying memory areas. Memory copying is a basic operation, yet implementing it on the EVM co...",
      "id": "TIP-651",
      "number": 651,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-651.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-651.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Implement EIP-1153 Transient storage opcodes",
      "status": "Final",
      "author": "yanghang8612@163.com",
      "created": "2024-03-28",
      "type": "Standards Track",
      "category": "VM",
      "summary": "As part of the Ethereum Cancun upgrade, [EIP-1153: Transient storage opcodes](https://eips.ethereum.org/EIPS/eip-1153) is required to be implemented to TRON. This proposal introduces transient storage opcodes, which manipulate state that behaves identically to storage, except that transient storage ...",
      "id": "TIP-650",
      "number": 650,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-650.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-650.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize Reward Withdrawal To Improve TPS",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2023-12-21",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP aims to optimize the algorithm of the voting reward withdrawal in Phase1 (since TIP-53, before TIP-465 took effect) to improve the TPS of such transactions. There are currently two phases of the TRON protocol voting reward: * Phase1: Since TIP-53 and before TIP-465 took effect, the voting r...",
      "id": "TIP-635",
      "number": 635,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-635.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-635.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Add code version column to HelloMessage",
      "status": "Final",
      "author": "317787106@qq.com",
      "created": "2023-11-01",
      "type": "Standards Track",
      "category": "Networking",
      "summary": "This TIP describes why the code version column needs to be added to `HelloMessage` when node handshakes with peers. A new column code version is added to the proto message `HelloMessage` so that the local node can learn more information about peers when handshaking. There have been 73 release versio...",
      "id": "TIP-621",
      "number": 621,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-621.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-621.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP-592",
      "status": "Unknown",
      "author": "Unknown",
      "created": "Unknown",
      "type": "Unknown",
      "category": "Unknown",
      "summary": " ```\nTIP: 592\nTitle: Supplement Disconnect Reasons in Java-tron\nAuthor: 317787106@qq.com\nStatus: Final\nType: Standards Track\nCategory: Networking\nCreated: 2023-09-13\n```\n\n## Simple Summary\n\nThis TIP d...",
      "id": "TIP-592",
      "number": 592,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-592.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-592.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "GRPC Implementation for Resource Price Interfaces",
      "status": "Final",
      "author": "lxcmyf@gmail.com",
      "created": "2023-08-29",
      "type": "Standards Track",
      "category": "Core",
      "summary": "GRPC is a high-performance, general-purpose RPC framework open-sourced by Google. This TIP aims to improve gRPC calls for some specific interfaces in Java-tron. Currently, the interfaces `/wallet/getbandwidthprices` and `/wallet/getenergyprices` provided by Java-tron do not support gRPC calls. This ...",
      "id": "TIP-586",
      "number": 586,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-586.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-586.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Network upgrade logic optimization",
      "status": "Final",
      "author": "allen.cheng@tron.network",
      "created": "2023-06-09",
      "type": "Standards Track",
      "category": "core",
      "summary": "This TIP is to specifically explain the current problems and solutions in the network upgrade logic in [java-tron](https://github.com/tronprotocol/java-tron). The network upgrade strategy currently adopted by java-tron is to complete the upgrade after reaching the specified network upgrade time and ...",
      "id": "TIP-555",
      "number": 555,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-555.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-555.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "P2P message snappy compression",
      "status": "Final",
      "author": "allen.cheng@tron.network",
      "created": "2023-05-22",
      "type": "Standards Track",
      "category": "Networking",
      "summary": "This TIP proposes a small extension to the TRON protocol to enable Snappy compression on all message payloads after the initial handshake. The base networking protocol used by TRON currently does not employ any form of compression. This results in a massive amount of bandwidth wasted in the entire n...",
      "id": "TIP-550",
      "number": 550,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-550.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-550.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "P2P support IPv6 protocol",
      "status": "Final",
      "author": "317787106@qq.com",
      "created": "2023-05-22",
      "type": "Standards Track",
      "category": "Networking",
      "summary": "This document describes how to support nodes with IPv6 stack in libp2p network. [Libp2p](https://github.com/tronprotocol/libp2p) support connection between IPv6 nodes to expand usage scenarios and provide adaptability, we prefer to use IPv4 to be suitable for most scenarios if nodes supoort both IPv...",
      "id": "TIP-549",
      "number": 549,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-549.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-549.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Node Discovery via DNS",
      "status": "Final",
      "author": "317787106@qq.com",
      "created": "2023-05-22",
      "type": "Standards Track",
      "category": "Networking",
      "summary": "This document describes a scheme for authenticated, dynamically updated libp2p node lists retrievable via DNS. We build two merkle trees using known links and nodes from DHT, and publish it on dns server, so everyone can discover nodes free while no need to run DHT. Many java-tron clients contain ha...",
      "id": "TIP-548",
      "number": 548,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-548.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-548.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Connection precheck before P2P communication",
      "status": "Final",
      "author": "wb_bupt@163.com",
      "created": "2023-05-22",
      "type": "Standards Track",
      "category": "Networking",
      "summary": "This TIP is to specify how to establish a p2p connection effectively and quickly through the node precheck. The node to be connected is selected by the order of the node update time, but it is impossible to know whether the other party can receive the connection. In the actual scene, the probability...",
      "id": "TIP-547",
      "number": 547,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-547.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-547.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Add `data` to the http interfaces interacting with smart contract",
      "status": "Final",
      "author": "yanghang8612@163.com",
      "created": "2023-05-15",
      "type": "Standards Track",
      "category": "Interface",
      "summary": "This TIP is designed to optimize the http interfaces interacting with smart contract in order to make them more user-friendly. The http interfaces interacting with smart contract must pass the `function_selector` and `parameters` fields, the user cannot interact with smart contracts by passing `data...",
      "id": "TIP-544",
      "number": 544,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-544.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-544.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Implement EIP-3855 PUSH0 instruction",
      "status": "Final",
      "author": "yanghang8612@163.com",
      "created": "2023-05-15",
      "type": "Standards Track",
      "category": "VM",
      "summary": "As part of the Ethereum Shanghai upgrade, [EIP-3855: PUSH0 Instruction](https://eips.ethereum.org/EIPS/eip-3855) is required to be implemented to TRON. Introduce the `PUSH0` (`0x5f`) instruction, which pushes the constant value 0 onto the stack. The Ethereum Shanghai upgrade inclues **EIP-3855: PUSH...",
      "id": "TIP-543",
      "number": 543,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-543.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-543.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Resource delegating supports customizable lock period",
      "status": "Final",
      "author": "Tee",
      "created": "2023-05-12",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Add a `lock_period` parameter in the `wallet/delegateresource` API in Stake 2.0, to support delegating bandwidth or energy resource with a specified lockup time. Besides the current API `wallet/delegateresource` that allows users to lockup a solid 3 days before the resouce could be undelegated, it i...",
      "id": "TIP-542",
      "number": 542,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-542.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-542.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Resource delegating supports customizable lock period",
      "status": "Final",
      "author": "Tee",
      "created": "2023-05-12",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Add a `lock_period` parameter in the `wallet/delegateresource` API in Stake 2.0, to support delegating bandwidth or energy resource with a specified lockup time. Besides the current API `wallet/delegateresource` that allows users to lockup a solid 3 days before the resouce could be undelegated, it i...",
      "id": "TIP-542",
      "number": 542,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-542.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-542.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Resource delegating supports customizable lock period",
      "status": "Final",
      "author": "Tee",
      "created": "2023-05-12",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Add a `lock_period` parameter in the `wallet/delegateresource` API in Stake 2.0, to support delegating bandwidth or energy resource with a specified lockup time. Besides the current API `wallet/delegateresource` that allows users to lockup a solid 3 days before the resouce could be undelegated, it i...",
      "id": "TIP-542",
      "number": 542,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-542.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-542.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Support canceling unstaking in Stake 2.0",
      "status": "Final",
      "author": "CooperDepp",
      "created": "2023-05-05",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Add an API in Stake 2.0 to allow users to cancel the unstaking transactions in the waiting period. To be consistent with TVM instructions in Stake 2.0, it is proposed to add an API to support canceling unstaking in Stake 2.0, which means that users can use this API to cancel unstaking in waiting per...",
      "id": "TIP-541",
      "number": 541,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-541.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-541.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Support canceling unstaking in Stake 2.0",
      "status": "Final",
      "author": "CooperDepp",
      "created": "2023-05-05",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Add an API in Stake 2.0 to allow users to cancel the unstaking transactions in the waiting period. To be consistent with TVM instructions in Stake 2.0, it is proposed to add an API to support canceling unstaking in Stake 2.0, which means that users can use this API to cancel unstaking in waiting per...",
      "id": "TIP-541",
      "number": 541,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-541.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-541.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Support canceling unstaking in Stake 2.0",
      "status": "Final",
      "author": "CooperDepp",
      "created": "2023-05-05",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Add an API in Stake 2.0 to allow users to cancel the unstaking transactions in the waiting period. To be consistent with TVM instructions in Stake 2.0, it is proposed to add an API to support canceling unstaking in Stake 2.0, which means that users can use this API to cancel unstaking in waiting per...",
      "id": "TIP-541",
      "number": 541,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-541.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-541.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Remove Vulnerable APIs",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2023-04-14",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Propose to remove potential vulnerable APIs. Previously some APIs could lead to the leakage of sensitive information, such as private keys. Although developers have been advised not to make remote calls to these APIs, I think it is better to remove the relevant APIs for security concerns and mitigat...",
      "id": "TIP-534",
      "number": 534,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-534.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-534.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Remove Vulnerable APIs",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2023-04-14",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Propose to remove potential vulnerable APIs. Previously some APIs could lead to the leakage of sensitive information, such as private keys. Although developers have been advised not to make remote calls to these APIs, I think it is better to remove the relevant APIs for security concerns and mitigat...",
      "id": "TIP-534",
      "number": 534,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-534.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-534.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Remove Vulnerable APIs",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2023-04-14",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Propose to remove potential vulnerable APIs. Previously some APIs could lead to the leakage of sensitive information, such as private keys. Although developers have been advised not to make remote calls to these APIs, I think it is better to remove the relevant APIs for security concerns and mitigat...",
      "id": "TIP-534",
      "number": 534,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-534.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-534.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Dynamic Energy Model",
      "status": "Final",
      "author": "daniel.cao@tron.network",
      "created": "2022-12-19",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This tip proposes a mechanism to perform dynamic regulation of energy in contracts to balance the distribution of energy among contracts. In this tip, we propose a mechanism to dynamically adjust the energy consumption of a contract according to its execution resource usage. If a contract uses too m...",
      "id": "TIP-491",
      "number": 491,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-491.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-491.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Dynamic Energy Model",
      "status": "Final",
      "author": "daniel.cao@tron.network",
      "created": "2022-12-19",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This tip proposes a mechanism to perform dynamic regulation of energy in contracts to balance the distribution of energy among contracts. In this tip, we propose a mechanism to dynamically adjust the energy consumption of a contract according to its execution resource usage. If a contract uses too m...",
      "id": "TIP-491",
      "number": 491,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-491.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-491.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Dynamic Energy Model",
      "status": "Final",
      "author": "daniel.cao@tron.network",
      "created": "2022-12-19",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This tip proposes a mechanism to perform dynamic regulation of energy in contracts to balance the distribution of energy among contracts. In this tip, we propose a mechanism to dynamically adjust the energy consumption of a contract according to its execution resource usage. If a contract uses too m...",
      "id": "TIP-491",
      "number": 491,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-491.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-491.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Delegate Data Structure Optimization",
      "status": "Final",
      "author": "lxcmyf@gmail.com",
      "created": "2022-11-14",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP aims to optimize the account index storage structure of resource delegating, to improve transaction execution performance and throughput. During the execution of the existing delegating transaction, when an owner delegates resources to others, it is necessary to maintain the delegate relati...",
      "id": "TIP-476",
      "number": 476,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-476.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-476.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Delegate Data Structure Optimization",
      "status": "Final",
      "author": "lxcmyf@gmail.com",
      "created": "2022-11-14",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP aims to optimize the account index storage structure of resource delegating, to improve transaction execution performance and throughput. During the execution of the existing delegating transaction, when an owner delegates resources to others, it is necessary to maintain the delegate relati...",
      "id": "TIP-476",
      "number": 476,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-476.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-476.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Delegate Data Structure Optimization",
      "status": "Final",
      "author": "lxcmyf@gmail.com",
      "created": "2022-11-14",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP aims to optimize the account index storage structure of resource delegating, to improve transaction execution performance and throughput. During the execution of the existing delegating transaction, when an owner delegates resources to others, it is necessary to maintain the delegate relati...",
      "id": "TIP-476",
      "number": 476,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-476.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-476.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize the return value of chainid opcode",
      "status": "Final",
      "author": "yanghang8612",
      "created": "2022-11-04",
      "type": "Standards Track",
      "category": "VM",
      "summary": "This TIP aims to optimize the return value of the `chainid` opcode. The chainId of the TRON mainnet can be queried through the `jsonrpc` interface, as follows ```shell=...",
      "id": "TIP-474",
      "number": 474,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-474.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-474.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize the return value of chainid opcode",
      "status": "Final",
      "author": "yanghang8612",
      "created": "2022-11-04",
      "type": "Standards Track",
      "category": "VM",
      "summary": "This TIP aims to optimize the return value of the `chainid` opcode. The chainId of the TRON mainnet can be queried through the `jsonrpc` interface, as follows ```shell=...",
      "id": "TIP-474",
      "number": 474,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-474.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-474.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize the return value of chainid opcode",
      "status": "Final",
      "author": "yanghang8612",
      "created": "2022-11-04",
      "type": "Standards Track",
      "category": "VM",
      "summary": "This TIP aims to optimize the return value of the `chainid` opcode. The chainId of the TRON mainnet can be queried through the `jsonrpc` interface, as follows ```shell=...",
      "id": "TIP-474",
      "number": 474,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-474.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-474.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Stake 2.0 - A new TRON staking model",
      "status": "Final",
      "author": "lxcmyf@gmail.com",
      "created": "2022-09-28",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP aims to establish a more flexible stake model, called Stake 2.0, Stake 2.0 can improve the utilization of network resources, and at the same time enhance the stability of the TRON stake system. At present, by staking TRX on the TRON network, you can obtain voting rights called TRON Power, a...",
      "id": "TIP-467",
      "number": 467,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-467.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-467.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Stake 2.0 - A new TRON staking model",
      "status": "Final",
      "author": "lxcmyf@gmail.com",
      "created": "2022-09-28",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP aims to establish a more flexible stake model, called Stake 2.0, Stake 2.0 can improve the utilization of network resources, and at the same time enhance the stability of the TRON stake system. At present, by staking TRX on the TRON network, you can obtain voting rights called TRON Power, a...",
      "id": "TIP-467",
      "number": 467,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-467.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-467.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Stake 2.0 - A new TRON staking model",
      "status": "Final",
      "author": "lxcmyf@gmail.com",
      "created": "2022-09-28",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP aims to establish a more flexible stake model, called Stake 2.0, Stake 2.0 can improve the utilization of network resources, and at the same time enhance the stability of the TRON stake system. At present, by staking TRX on the TRON network, you can obtain voting rights called TRON Power, a...",
      "id": "TIP-467",
      "number": 467,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-467.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-467.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "new reward calculation algorithm",
      "status": "Final",
      "author": "bladehan@163.com",
      "created": "2022-09-21",
      "type": "Standards Track",
      "category": "Core",
      "summary": "The new reward algorithm is used to reduce the time-consuming of reward calculation. It has been implemented in TIP-271, but the corresponding proposal has not been passed, so a proposal that only contains this algorithm is made independently. Analyzing the existing reward algorithm of the code, the...",
      "id": "TIP-465",
      "number": 465,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-465.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-465.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "new reward calculation algorithm",
      "status": "Final",
      "author": "bladehan@163.com",
      "created": "2022-09-21",
      "type": "Standards Track",
      "category": "Core",
      "summary": "The new reward algorithm is used to reduce the time-consuming of reward calculation. It has been implemented in TIP-271, but the corresponding proposal has not been passed, so a proposal that only contains this algorithm is made independently. Analyzing the existing reward algorithm of the code, the...",
      "id": "TIP-465",
      "number": 465,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-465.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-465.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "new reward calculation algorithm",
      "status": "Final",
      "author": "bladehan@163.com",
      "created": "2022-09-21",
      "type": "Standards Track",
      "category": "Core",
      "summary": "The new reward algorithm is used to reduce the time-consuming of reward calculation. It has been implemented in TIP-271, but the corresponding proposal has not been passed, so a proposal that only contains this algorithm is made independently. Analyzing the existing reward algorithm of the code, the...",
      "id": "TIP-465",
      "number": 465,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-465.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-465.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize data consistency for system abnormals",
      "status": "Final",
      "author": "ray.wu",
      "created": "2022-09-02",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP proposes a solution to TRON database inconsistent when the system is shut down ungracefully. At present, most public chains in the industry use embedded databases as their underlying storage, and TRON is no exception. Currently, TRON supports LevelDB and RocksDB two kinds of KV storage, and...",
      "id": "TIP-461",
      "number": 461,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-461.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-461.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize data consistency for system abnormals",
      "status": "Final",
      "author": "ray.wu",
      "created": "2022-09-02",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP proposes a solution to TRON database inconsistent when the system is shut down ungracefully. At present, most public chains in the industry use embedded databases as their underlying storage, and TRON is no exception. Currently, TRON supports LevelDB and RocksDB two kinds of KV storage, and...",
      "id": "TIP-461",
      "number": 461,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-461.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-461.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize data consistency for system abnormals",
      "status": "Final",
      "author": "ray.wu",
      "created": "2022-09-02",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP proposes a solution to TRON database inconsistent when the system is shut down ungracefully. At present, most public chains in the industry use embedded databases as their underlying storage, and TRON is no exception. Currently, TRON supports LevelDB and RocksDB two kinds of KV storage, and...",
      "id": "TIP-461",
      "number": 461,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-461.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-461.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Transaction cache optimization",
      "status": "Final",
      "author": "jell7@163.com",
      "created": "2022-07-20",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP describes an optimization for transaction cache to reduce memory usage. Analyzing the program runtime's memory, the transaction cache is shown to take up the overwhelming majority of memory. This article details an optimization for the transaction cache. At present, hashmap is used to cache...",
      "id": "TIP-440",
      "number": 440,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-440.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-440.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Transaction cache optimization",
      "status": "Final",
      "author": "jell7@163.com",
      "created": "2022-07-20",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP describes an optimization for transaction cache to reduce memory usage. Analyzing the program runtime's memory, the transaction cache is shown to take up the overwhelming majority of memory. This article details an optimization for the transaction cache. At present, hashmap is used to cache...",
      "id": "TIP-440",
      "number": 440,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-440.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-440.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Transaction cache optimization",
      "status": "Final",
      "author": "jell7@163.com",
      "created": "2022-07-20",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP describes an optimization for transaction cache to reduce memory usage. Analyzing the program runtime's memory, the transaction cache is shown to take up the overwhelming majority of memory. This article details an optimization for the transaction cache. At present, hashmap is used to cache...",
      "id": "TIP-440",
      "number": 440,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-440.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-440.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Increase the probability that the block processing thread acquires the lock",
      "status": "Final",
      "author": "wb_bupt@163.com",
      "created": "2022-07-11",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP is to describe how to increase the probability that the block processing thread acquires the lock. Online machines are generally 32 cores, and the probability of block threads competing for locks is 1/34. In high concurrency scenarios, if the average transaction execution time is 10ms, the ...",
      "id": "TIP-428",
      "number": 428,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-428.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-428.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Increase the probability that the block processing thread acquires the lock",
      "status": "Final",
      "author": "wb_bupt@163.com",
      "created": "2022-07-11",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP is to describe how to increase the probability that the block processing thread acquires the lock. Online machines are generally 32 cores, and the probability of block threads competing for locks is 1/34. In high concurrency scenarios, if the average transaction execution time is 10ms, the ...",
      "id": "TIP-428",
      "number": 428,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-428.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-428.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Increase the probability that the block processing thread acquires the lock",
      "status": "Final",
      "author": "wb_bupt@163.com",
      "created": "2022-07-11",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP is to describe how to increase the probability that the block processing thread acquires the lock. Online machines are generally 32 cores, and the probability of block threads competing for locks is 1/34. In high concurrency scenarios, if the average transaction execution time is 10ms, the ...",
      "id": "TIP-428",
      "number": 428,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-428.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-428.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Speed up TCP connection establishment",
      "status": "Final",
      "author": "wb_bupt@163.com",
      "created": "2022-07-11",
      "type": "Standards Track",
      "category": "Net",
      "summary": "This TIP is to describe how to speed up TCP connection establishment. With the increasing number of online nodes, the number of connections of many peers is full. If a connection is established with these nodes, the connection will be refused with the reason of too many peers, and it may take more t...",
      "id": "TIP-425",
      "number": 425,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-425.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-425.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Speed up TCP connection establishment",
      "status": "Final",
      "author": "wb_bupt@163.com",
      "created": "2022-07-11",
      "type": "Standards Track",
      "category": "Net",
      "summary": "This TIP is to describe how to speed up TCP connection establishment. With the increasing number of online nodes, the number of connections of many peers is full. If a connection is established with these nodes, the connection will be refused with the reason of too many peers, and it may take more t...",
      "id": "TIP-425",
      "number": 425,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-425.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-425.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Speed up TCP connection establishment",
      "status": "Final",
      "author": "wb_bupt@163.com",
      "created": "2022-07-11",
      "type": "Standards Track",
      "category": "Net",
      "summary": "This TIP is to describe how to speed up TCP connection establishment. With the increasing number of online nodes, the number of connections of many peers is full. If a connection is established with these nodes, the connection will be refused with the reason of too many peers, and it may take more t...",
      "id": "TIP-425",
      "number": 425,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-425.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-425.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Raise limit of the 13th network parameter",
      "status": "Final",
      "author": "yanghang8612@163.com",
      "created": "2022-04-06",
      "type": "Standards Track",
      "category": "VM",
      "summary": "Raise the limit of the 13th(MAX_CPU_TIME_OF_ONE_TX) network parameter. The 13th network parameter now ranges from 10 to 100 ms. This range currently greatly limits developers from designing more diverse and complex applications such as DeFi, GameFi, etc. Therefore the purpose of this TIP is to exten...",
      "id": "TIP-397",
      "number": 397,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-397.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-397.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Raise limit of the 13th network parameter",
      "status": "Final",
      "author": "yanghang8612@163.com",
      "created": "2022-04-06",
      "type": "Standards Track",
      "category": "VM",
      "summary": "Raise the limit of the 13th(MAX_CPU_TIME_OF_ONE_TX) network parameter. The 13th network parameter now ranges from 10 to 100 ms. This range currently greatly limits developers from designing more diverse and complex applications such as DeFi, GameFi, etc. Therefore the purpose of this TIP is to exten...",
      "id": "TIP-397",
      "number": 397,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-397.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-397.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Raise limit of the 13th network parameter",
      "status": "Final",
      "author": "yanghang8612@163.com",
      "created": "2022-04-06",
      "type": "Standards Track",
      "category": "VM",
      "summary": "Raise the limit of the 13th(MAX_CPU_TIME_OF_ONE_TX) network parameter. The 13th network parameter now ranges from 10 to 100 ms. This range currently greatly limits developers from designing more diverse and complex applications such as DeFi, GameFi, etc. Therefore the purpose of this TIP is to exten...",
      "id": "TIP-397",
      "number": 397,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-397.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-397.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize fetch block process",
      "status": "Final",
      "author": "vikingzzu@163.com",
      "created": "2022-03-21",
      "type": "Standards Track",
      "category": "Networking",
      "summary": "Optimize fetch block process between nodes During the process of broadcasting a block, sometimes timeouts occur between nodes fetching blocks, nodes will wait until it times out and then go through a P2P sync to fetch the block, the P2P block fetching process will send SyncBlockChainMessage, ChainIn...",
      "id": "TIP-391",
      "number": 391,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-391.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-391.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize fetch block process",
      "status": "Final",
      "author": "vikingzzu@163.com",
      "created": "2022-03-21",
      "type": "Standards Track",
      "category": "Networking",
      "summary": "Optimize fetch block process between nodes During the process of broadcasting a block, sometimes timeouts occur between nodes fetching blocks, nodes will wait until it times out and then go through a P2P sync to fetch the block, the P2P block fetching process will send SyncBlockChainMessage, ChainIn...",
      "id": "TIP-391",
      "number": 391,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-391.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-391.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize fetch block process",
      "status": "Final",
      "author": "vikingzzu@163.com",
      "created": "2022-03-21",
      "type": "Standards Track",
      "category": "Networking",
      "summary": "Optimize fetch block process between nodes During the process of broadcasting a block, sometimes timeouts occur between nodes fetching blocks, nodes will wait until it times out and then go through a P2P sync to fetch the block, the P2P block fetching process will send SyncBlockChainMessage, ChainIn...",
      "id": "TIP-391",
      "number": 391,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-391.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-391.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize light node synchronization logic",
      "status": "Final",
      "author": "wb_bupt@163.com",
      "created": "2022-03-14",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP mainly describes how to optimize light node synchronization logic. This phenomenon can be found online. After the connection with a light node is established and the handshake is completed, the node enters the synchronous mode. However, when obtaining a block from the light node, the light ...",
      "id": "TIP-388",
      "number": 388,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-388.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-388.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize light node synchronization logic",
      "status": "Final",
      "author": "wb_bupt@163.com",
      "created": "2022-03-14",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP mainly describes how to optimize light node synchronization logic. This phenomenon can be found online. After the connection with a light node is established and the handshake is completed, the node enters the synchronous mode. However, when obtaining a block from the light node, the light ...",
      "id": "TIP-388",
      "number": 388,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-388.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-388.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize light node synchronization logic",
      "status": "Final",
      "author": "wb_bupt@163.com",
      "created": "2022-03-14",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP mainly describes how to optimize light node synchronization logic. This phenomenon can be found online. After the connection with a light node is established and the handshake is completed, the node enters the synchronous mode. However, when obtaining a block from the light node, the light ...",
      "id": "TIP-388",
      "number": 388,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-388.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-388.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Transaction memo fee",
      "status": "Final",
      "author": "Andy",
      "created": "2022-03-13",
      "type": "Unknown",
      "category": "Interface",
      "summary": "It is recommended that transaction memo burn trx to reduce transactions with fake memo. TRC10 token does not need to consume energy because of free bandwidth. Every day there are tens of thousands of transfer memo with fake news, scam links. Serious impact on TRON ecology. And there is currently no ...",
      "id": "TIP-387",
      "number": 387,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-387.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-387.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Transaction memo fee",
      "status": "Final",
      "author": "Andy",
      "created": "2022-03-13",
      "type": "Unknown",
      "category": "Interface",
      "summary": "It is recommended that transaction memo burn trx to reduce transactions with fake memo. TRC10 token does not need to consume energy because of free bandwidth. Every day there are tens of thousands of transfer memo with fake news, scam links. Serious impact on TRON ecology. And there is currently no ...",
      "id": "TIP-387",
      "number": 387,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-387.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-387.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Transaction memo fee",
      "status": "Final",
      "author": "Andy",
      "created": "2022-03-13",
      "type": "Unknown",
      "category": "Interface",
      "summary": "It is recommended that transaction memo burn trx to reduce transactions with fake memo. TRC10 token does not need to consume energy because of free bandwidth. Every day there are tens of thousands of transfer memo with fake news, scam links. Serious impact on TRON ecology. And there is currently no ...",
      "id": "TIP-387",
      "number": 387,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-387.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-387.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize transaction cache loading",
      "status": "Final",
      "author": "wb_bupt@163.com",
      "created": "2022-02-28",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP is to describes how to optimize transaction cache loading. When start the node with the official suggested machine configuration (16cores, 32G, SSD) and the provided startup script. It takes a long time to start syncing blocks each time. Through analysis, it is found that transaction cache ...",
      "id": "TIP-383",
      "number": 383,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-383.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-383.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize transaction cache loading",
      "status": "Final",
      "author": "wb_bupt@163.com",
      "created": "2022-02-28",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP is to describes how to optimize transaction cache loading. When start the node with the official suggested machine configuration (16cores, 32G, SSD) and the provided startup script. It takes a long time to start syncing blocks each time. Through analysis, it is found that transaction cache ...",
      "id": "TIP-383",
      "number": 383,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-383.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-383.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize transaction cache loading",
      "status": "Final",
      "author": "wb_bupt@163.com",
      "created": "2022-02-28",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP is to describes how to optimize transaction cache loading. When start the node with the official suggested machine configuration (16cores, 32G, SSD) and the provided startup script. It takes a long time to start syncing blocks each time. Through analysis, it is found that transaction cache ...",
      "id": "TIP-383",
      "number": 383,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-383.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-383.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize the data structure of account assets",
      "status": "Final",
      "author": "wb_bupt@163.com",
      "created": "2022-02-28",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP is to optimize the data structure of account assets. In the process of executing the transaction, most of the time is spent in the deserialization operation of the account. Later analysis, it is caused by the account asset list being too large. Some accounts have thousands of assets. During...",
      "id": "TIP-382",
      "number": 382,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-382.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-382.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize the data structure of account assets",
      "status": "Final",
      "author": "wb_bupt@163.com",
      "created": "2022-02-28",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP is to optimize the data structure of account assets. In the process of executing the transaction, most of the time is spent in the deserialization operation of the account. Later analysis, it is caused by the account asset list being too large. Some accounts have thousands of assets. During...",
      "id": "TIP-382",
      "number": 382,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-382.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-382.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize the data structure of account assets",
      "status": "Final",
      "author": "wb_bupt@163.com",
      "created": "2022-02-28",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP is to optimize the data structure of account assets. In the process of executing the transaction, most of the time is spent in the deserialization operation of the account. Later analysis, it is caused by the account asset list being too large. Some accounts have thousands of assets. During...",
      "id": "TIP-382",
      "number": 382,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-382.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-382.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Node support conditionalized stop",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2022-03-05",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP describes feature about `java-tron` stop block synchronization according to specified conditions, such as a given `block height`，`block timestamp`, make the blockchain stop exactly at a specific state. There are some scenarios that require `java-tron` to be stopped according to given condit...",
      "id": "TIP-370",
      "number": 370,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-370.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-370.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Node support conditionalized stop",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2022-03-05",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP describes feature about `java-tron` stop block synchronization according to specified conditions, such as a given `block height`，`block timestamp`, make the blockchain stop exactly at a specific state. There are some scenarios that require `java-tron` to be stopped according to given condit...",
      "id": "TIP-370",
      "number": 370,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-370.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-370.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Node support conditionalized stop",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2022-03-05",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP describes feature about `java-tron` stop block synchronization according to specified conditions, such as a given `block height`，`block timestamp`, make the blockchain stop exactly at a specific state. There are some scenarios that require `java-tron` to be stopped according to given condit...",
      "id": "TIP-370",
      "number": 370,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-370.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-370.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Node support prometheus metrics",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2022-03-05",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Monitor your Java-tron server with [Prometheus](https://prometheus.io/) and  [Grafana](https://grafana.com/grafana/). Use `prometheus`, we can monitor node status, block information, transactions, api calls, method calls, mining block status, etc, then use `grafana` to show infos, make alerts, and b...",
      "id": "TIP-369",
      "number": 369,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-369.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-369.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Node support prometheus metrics",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2022-03-05",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Monitor your Java-tron server with [Prometheus](https://prometheus.io/) and  [Grafana](https://grafana.com/grafana/). Use `prometheus`, we can monitor node status, block information, transactions, api calls, method calls, mining block status, etc, then use `grafana` to show infos, make alerts, and b...",
      "id": "TIP-369",
      "number": 369,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-369.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-369.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Node support prometheus metrics",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2022-03-05",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Monitor your Java-tron server with [Prometheus](https://prometheus.io/) and  [Grafana](https://grafana.com/grafana/). Use `prometheus`, we can monitor node status, block information, transactions, api calls, method calls, mining block status, etc, then use `grafana` to show infos, make alerts, and b...",
      "id": "TIP-369",
      "number": 369,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-369.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-369.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP-366 Node startup optimization",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2022-01-24",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Currently, it takes about 1 minute from node starts  to  block synchronization. Block synchronization depends on node tcp establishment.During the start-up，the current tcp connection establishment thread is delayed by 30s to wait neighbors discovery. However, when `node.discovery.persist = true`, th...",
      "id": "TIP-366",
      "number": 366,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-366.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-366.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP-366 Node startup optimization",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2022-01-24",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Currently, it takes about 1 minute from node starts  to  block synchronization. Block synchronization depends on node tcp establishment.During the start-up，the current tcp connection establishment thread is delayed by 30s to wait neighbors discovery. However, when `node.discovery.persist = true`, th...",
      "id": "TIP-366",
      "number": 366,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-366.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-366.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP-366 Node startup optimization",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2022-01-24",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Currently, it takes about 1 minute from node starts  to  block synchronization. Block synchronization depends on node tcp establishment.During the start-up，the current tcp connection establishment thread is delayed by 30s to wait neighbors discovery. However, when `node.discovery.persist = true`, th...",
      "id": "TIP-366",
      "number": 366,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-366.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-366.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimized node broadcast data caching",
      "status": "Final",
      "author": "forfreeday@163.com",
      "created": "2022-01-17",
      "type": "Standards Track",
      "category": "Core",
      "summary": "The node caches a large amount of transaction data before broadcasting, and as a way to determine whether the transaction is duplicated, the default cache is 100_000 effect easy to ensure that there will be no duplicate transactions. And this part of the transaction in actual use found that caching ...",
      "id": "TIP-362",
      "number": 362,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-362.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-362.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimized node broadcast data caching",
      "status": "Final",
      "author": "forfreeday@163.com",
      "created": "2022-01-17",
      "type": "Standards Track",
      "category": "Core",
      "summary": "The node caches a large amount of transaction data before broadcasting, and as a way to determine whether the transaction is duplicated, the default cache is 100_000 effect easy to ensure that there will be no duplicate transactions. And this part of the transaction in actual use found that caching ...",
      "id": "TIP-362",
      "number": 362,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-362.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-362.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimized node broadcast data caching",
      "status": "Final",
      "author": "forfreeday@163.com",
      "created": "2022-01-17",
      "type": "Standards Track",
      "category": "Core",
      "summary": "The node caches a large amount of transaction data before broadcasting, and as a way to determine whether the transaction is duplicated, the default cache is 100_000 effect easy to ensure that there will be no duplicate transactions. And this part of the transaction in actual use found that caching ...",
      "id": "TIP-362",
      "number": 362,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-362.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-362.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP-344",
      "status": "Unknown",
      "author": "Unknown",
      "created": "Unknown",
      "type": "Unknown",
      "category": "Unknown",
      "summary": "\n```\ntip: 344\ntitle: Optimize instruction execution for TVM\t\nauthor: yanghang8612@163.com\ndiscussions to: https://github.com/tronprotocol/TIPs/issues/344\nstatus: Final\ntype: Standards Track\ncategory: ...",
      "id": "TIP-344",
      "number": 344,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-344.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-344.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP-344",
      "status": "Unknown",
      "author": "Unknown",
      "created": "Unknown",
      "type": "Unknown",
      "category": "Unknown",
      "summary": "\n```\ntip: 344\ntitle: Optimize instruction execution for TVM\t\nauthor: yanghang8612@163.com\ndiscussions to: https://github.com/tronprotocol/TIPs/issues/344\nstatus: Final\ntype: Standards Track\ncategory: ...",
      "id": "TIP-344",
      "number": 344,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-344.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-344.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP-344",
      "status": "Unknown",
      "author": "Unknown",
      "created": "Unknown",
      "type": "Unknown",
      "category": "Unknown",
      "summary": "\n```\ntip: 344\ntitle: Optimize instruction execution for TVM\t\nauthor: yanghang8612@163.com\ndiscussions to: https://github.com/tronprotocol/TIPs/issues/344\nstatus: Final\ntype: Standards Track\ncategory: ...",
      "id": "TIP-344",
      "number": 344,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-344.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-344.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP-343 Refine Write Parameters For Leveldb",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2021-11-26",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP is optimize leveldb read performance. Through analysis,[parameters that affect performance](https://github.com/google/leveldb/blob/master/include/leveldb/options.h#L72) read performance is affected `by write_buffer_size`, `max_open_files`, `block_cache` etc....",
      "id": "TIP-343",
      "number": 343,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-343.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-343.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP-343 Refine Write Parameters For Leveldb",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2021-11-26",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP is optimize leveldb read performance. Through analysis,[parameters that affect performance](https://github.com/google/leveldb/blob/master/include/leveldb/options.h#L72) read performance is affected `by write_buffer_size`, `max_open_files`, `block_cache` etc....",
      "id": "TIP-343",
      "number": 343,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-343.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-343.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP-343 Refine Write Parameters For Leveldb",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2021-11-26",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP is optimize leveldb read performance. Through analysis,[parameters that affect performance](https://github.com/google/leveldb/blob/master/include/leveldb/options.h#L72) read performance is affected `by write_buffer_size`, `max_open_files`, `block_cache` etc....",
      "id": "TIP-343",
      "number": 343,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-343.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-343.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Adapt to Ethereum London Upgrade",
      "status": "Final",
      "author": "neo.hong@tron.network",
      "created": "2021-08-16",
      "type": "Standards Track",
      "category": "VM",
      "summary": "- Add a `BASEFEE(0x48)` that returns the value of the network parameter that defines the fee of 1 unit of `Energy` - Disallow new code starting with the `0xEF` byte to be deployed. Code already existing in the code store starting with `0xEF` byte is not affected semantically by this change. The Ethe...",
      "id": "TIP-318",
      "number": 318,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-318.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-318.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Adapt to Ethereum London Upgrade",
      "status": "Final",
      "author": "neo.hong@tron.network",
      "created": "2021-08-16",
      "type": "Standards Track",
      "category": "VM",
      "summary": "- Add a `BASEFEE(0x48)` that returns the value of the network parameter that defines the fee of 1 unit of `Energy` - Disallow new code starting with the `0xEF` byte to be deployed. Code already existing in the code store starting with `0xEF` byte is not affected semantically by this change. The Ethe...",
      "id": "TIP-318",
      "number": 318,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-318.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-318.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Adapt to Ethereum London Upgrade",
      "status": "Final",
      "author": "neo.hong@tron.network",
      "created": "2021-08-16",
      "type": "Standards Track",
      "category": "VM",
      "summary": "- Add a `BASEFEE(0x48)` that returns the value of the network parameter that defines the fee of 1 unit of `Energy` - Disallow new code starting with the `0xEF` byte to be deployed. Code already existing in the code store starting with `0xEF` byte is not affected semantically by this change. The Ethe...",
      "id": "TIP-318",
      "number": 318,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-318.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-318.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Adapt to solidity_0.8.4",
      "status": "Final",
      "author": "neo.hong@tron.network",
      "created": "2021-07-29",
      "type": "Standards Track",
      "category": "VM",
      "summary": "Adapt to solidity_0.8.4. Solidity_0.8.4 supports custom errors via the `error` keyword and introduce the `revert` statement. To adapt to solidity_0.8.4 we need add `Error` type in java-tron smart contract ABI. To adapt to solidity_0.8.4 we need add `Error` type in java-tron smart contract ABI....",
      "id": "TIP-306",
      "number": 306,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-306.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-306.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Adapt to solidity_0.8.4",
      "status": "Final",
      "author": "neo.hong@tron.network",
      "created": "2021-07-29",
      "type": "Standards Track",
      "category": "VM",
      "summary": "Adapt to solidity_0.8.4. Solidity_0.8.4 supports custom errors via the `error` keyword and introduce the `revert` statement. To adapt to solidity_0.8.4 we need add `Error` type in java-tron smart contract ABI. To adapt to solidity_0.8.4 we need add `Error` type in java-tron smart contract ABI....",
      "id": "TIP-306",
      "number": 306,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-306.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-306.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Adapt to solidity_0.8.4",
      "status": "Final",
      "author": "neo.hong@tron.network",
      "created": "2021-07-29",
      "type": "Standards Track",
      "category": "VM",
      "summary": "Adapt to solidity_0.8.4. Solidity_0.8.4 supports custom errors via the `error` keyword and introduce the `revert` statement. To adapt to solidity_0.8.4 we need add `Error` type in java-tron smart contract ABI. To adapt to solidity_0.8.4 we need add `Error` type in java-tron smart contract ABI....",
      "id": "TIP-306",
      "number": 306,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-306.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-306.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Reformat manifest",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2021-07-16",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP describes the levelDB Manifest file reformatting function. The c++ version of levelDB has been running for a long time, the manifest file may grow too big, resulting in high memory and long start-up time when restarting the database, for this situation, use the java version to process the l...",
      "id": "TIP-298",
      "number": 298,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-298.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-298.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Reformat manifest",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2021-07-16",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP describes the levelDB Manifest file reformatting function. The c++ version of levelDB has been running for a long time, the manifest file may grow too big, resulting in high memory and long start-up time when restarting the database, for this situation, use the java version to process the l...",
      "id": "TIP-298",
      "number": 298,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-298.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-298.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Reformat manifest",
      "status": "Final",
      "author": "halibobo1205@gmail.com",
      "created": "2021-07-16",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP describes the levelDB Manifest file reformatting function. The c++ version of levelDB has been running for a long time, the manifest file may grow too big, resulting in high memory and long start-up time when restarting the database, for this situation, use the java version to process the l...",
      "id": "TIP-298",
      "number": 298,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-298.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-298.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize account assets",
      "status": "Final",
      "author": "forfreeday@163.com",
      "created": "2021-07-15",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Separate storage of account and asset data to improve the speed of serialization deserialization of accounts and assets. In the current account model data structure, account balance data and asset data are stored in AccountStore. When querying an account, asset-related data will also be queried and ...",
      "id": "TIP-295",
      "number": 295,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-295.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-295.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize account assets",
      "status": "Final",
      "author": "forfreeday@163.com",
      "created": "2021-07-15",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Separate storage of account and asset data to improve the speed of serialization deserialization of accounts and assets. In the current account model data structure, account balance data and asset data are stored in AccountStore. When querying an account, asset-related data will also be queried and ...",
      "id": "TIP-295",
      "number": 295,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-295.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-295.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize account assets",
      "status": "Final",
      "author": "forfreeday@163.com",
      "created": "2021-07-15",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Separate storage of account and asset data to improve the speed of serialization deserialization of accounts and assets. In the current account model data structure, account balance data and asset data are stored in AccountStore. When querying an account, asset-related data will also be queried and ...",
      "id": "TIP-295",
      "number": 295,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-295.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-295.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Add a proposal to adjust the total net limit",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2021-07-14",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP will add a proposal to adjust the total net limit. The total net limit stands for the bandwidth resource distributed to all the users when they freeze their TRX balances. At present, the total net limit `TOTAL_NET_LIMIT` parameter is set as a fixed value of 43.2 billion according to a rough...",
      "id": "TIP-293",
      "number": 293,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-293.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-293.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Add a proposal to adjust the total net limit",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2021-07-14",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP will add a proposal to adjust the total net limit. The total net limit stands for the bandwidth resource distributed to all the users when they freeze their TRX balances. At present, the total net limit `TOTAL_NET_LIMIT` parameter is set as a fixed value of 43.2 billion according to a rough...",
      "id": "TIP-293",
      "number": 293,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-293.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-293.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Add a proposal to adjust the total net limit",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2021-07-14",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP will add a proposal to adjust the total net limit. The total net limit stands for the bandwidth resource distributed to all the users when they freeze their TRX balances. At present, the total net limit `TOTAL_NET_LIMIT` parameter is set as a fixed value of 43.2 billion according to a rough...",
      "id": "TIP-293",
      "number": 293,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-293.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-293.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Add a proposal to adjust the free net limit in an account",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2021-07-13",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP will add a proposal to adjust the free net limit in an account. The free net limit is the free bandwidth resource that can be used by the users to decrease the transaction fee.  At present, the free net limit is set as a fixed value `5000`. But recently,  some malicious behaviors are discov...",
      "id": "TIP-292",
      "number": 292,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-292.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-292.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Add a proposal to adjust the free net limit in an account",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2021-07-13",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP will add a proposal to adjust the free net limit in an account. The free net limit is the free bandwidth resource that can be used by the users to decrease the transaction fee.  At present, the free net limit is set as a fixed value `5000`. But recently,  some malicious behaviors are discov...",
      "id": "TIP-292",
      "number": 292,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-292.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-292.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Add a proposal to adjust the free net limit in an account",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2021-07-13",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP will add a proposal to adjust the free net limit in an account. The free net limit is the free bandwidth resource that can be used by the users to decrease the transaction fee.  At present, the free net limit is set as a fixed value `5000`. But recently,  some malicious behaviors are discov...",
      "id": "TIP-292",
      "number": 292,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-292.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-292.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Dynamic store optimization",
      "status": "Final",
      "author": "lucas.wu@tron.network",
      "created": "2021-07-12",
      "type": "Unknown",
      "category": "Core",
      "summary": "This TIP is to optimize dynamic store query performance. Through analysis, a lot of time is spent on dynamic store queries during block processing. A total of 304 blocks were counted, including 36044 transactions, the number of dynamic store queries reached 1119525, and the number of queries hitting...",
      "id": "TIP-290",
      "number": 290,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-290.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-290.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Dynamic store optimization",
      "status": "Final",
      "author": "lucas.wu@tron.network",
      "created": "2021-07-12",
      "type": "Unknown",
      "category": "Core",
      "summary": "This TIP is to optimize dynamic store query performance. Through analysis, a lot of time is spent on dynamic store queries during block processing. A total of 304 blocks were counted, including 36044 transactions, the number of dynamic store queries reached 1119525, and the number of queries hitting...",
      "id": "TIP-290",
      "number": 290,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-290.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-290.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Dynamic store optimization",
      "status": "Final",
      "author": "lucas.wu@tron.network",
      "created": "2021-07-12",
      "type": "Unknown",
      "category": "Core",
      "summary": "This TIP is to optimize dynamic store query performance. Through analysis, a lot of time is spent on dynamic store queries during block processing. A total of 304 blocks were counted, including 36044 transactions, the number of dynamic store queries reached 1119525, and the number of queries hitting...",
      "id": "TIP-290",
      "number": 290,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-290.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-290.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Block Broadcast Optimization",
      "status": "Final",
      "author": "lucas.wu@tron.network",
      "created": "2021-07-12",
      "type": "Unknown",
      "category": "Core",
      "summary": "This TIP is to optimize block broadcasting. The current block processing and broadcasting logic is like this: Verify block → Process block → Broadcast block. The time consumption is mainly in the block processing. Therefore, once this broadcast logic is used, the block delay will be longer. The log ...",
      "id": "TIP-289",
      "number": 289,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-289.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-289.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Block Broadcast Optimization",
      "status": "Final",
      "author": "lucas.wu@tron.network",
      "created": "2021-07-12",
      "type": "Unknown",
      "category": "Core",
      "summary": "This TIP is to optimize block broadcasting. The current block processing and broadcasting logic is like this: Verify block → Process block → Broadcast block. The time consumption is mainly in the block processing. Therefore, once this broadcast logic is used, the block delay will be longer. The log ...",
      "id": "TIP-289",
      "number": 289,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-289.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-289.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Block Broadcast Optimization",
      "status": "Final",
      "author": "lucas.wu@tron.network",
      "created": "2021-07-12",
      "type": "Unknown",
      "category": "Core",
      "summary": "This TIP is to optimize block broadcasting. The current block processing and broadcasting logic is like this: Verify block → Process block → Broadcast block. The time consumption is mainly in the block processing. Therefore, once this broadcast logic is used, the block delay will be longer. The log ...",
      "id": "TIP-289",
      "number": 289,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-289.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-289.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize transaction cache initialization logic",
      "status": "Final",
      "author": "lucas.wu@tron.network",
      "created": "2021-06-21",
      "type": "Unknown",
      "category": "Core",
      "summary": "This TIP is to optimize transaction cache initialization logic to improve the speed of node startup. The transaction cache is initialized during the node startup process. The initialization logic is like this. The system will load the transactions in the latest 65536 blocks into the cache. This will...",
      "id": "TIP-285",
      "number": 285,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-285.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-285.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize transaction cache initialization logic",
      "status": "Final",
      "author": "lucas.wu@tron.network",
      "created": "2021-06-21",
      "type": "Unknown",
      "category": "Core",
      "summary": "This TIP is to optimize transaction cache initialization logic to improve the speed of node startup. The transaction cache is initialized during the node startup process. The initialization logic is like this. The system will load the transactions in the latest 65536 blocks into the cache. This will...",
      "id": "TIP-285",
      "number": 285,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-285.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-285.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize transaction cache initialization logic",
      "status": "Final",
      "author": "lucas.wu@tron.network",
      "created": "2021-06-21",
      "type": "Unknown",
      "category": "Core",
      "summary": "This TIP is to optimize transaction cache initialization logic to improve the speed of node startup. The transaction cache is initialized during the node startup process. The initialization logic is like this. The system will load the transactions in the latest 65536 blocks into the cache. This will...",
      "id": "TIP-285",
      "number": 285,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-285.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-285.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize the query of database",
      "status": "Final",
      "author": "forfreeday@163.com",
      "created": "2021-06-18",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Optimize the performance of underlying database queries and remove query synchronization locks. Optimize database queries to improve query efficiency. Remove unnecessary locking operations during queries to improve query efficiency for HTTP and RPC. To locate important performance issues and find th...",
      "id": "TIP-281",
      "number": 281,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-281.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-281.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize the query of database",
      "status": "Final",
      "author": "forfreeday@163.com",
      "created": "2021-06-18",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Optimize the performance of underlying database queries and remove query synchronization locks. Optimize database queries to improve query efficiency. Remove unnecessary locking operations during queries to improve query efficiency for HTTP and RPC. To locate important performance issues and find th...",
      "id": "TIP-281",
      "number": 281,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-281.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-281.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize the query of database",
      "status": "Final",
      "author": "forfreeday@163.com",
      "created": "2021-06-18",
      "type": "Standards Track",
      "category": "Core",
      "summary": "Optimize the performance of underlying database queries and remove query synchronization locks. Optimize database queries to improve query efficiency. Remove unnecessary locking operations during queries to improve query efficiency for HTTP and RPC. To locate important performance issues and find th...",
      "id": "TIP-281",
      "number": 281,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-281.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-281.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize block verification logic",
      "status": "Final",
      "author": "lucas.wu@tron.network",
      "created": "2021-06-03",
      "type": "Unknown",
      "category": "Core",
      "summary": "This TIP is to optimize the block verification logic to reduce block processing time. According to statistics, the verification of each transaction takes about 3ms on average. After analysis, the verification of the transaction takes up nearly one-third of the time during the entire block processing...",
      "id": "TIP-276",
      "number": 276,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-276.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-276.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize block verification logic",
      "status": "Final",
      "author": "lucas.wu@tron.network",
      "created": "2021-06-03",
      "type": "Unknown",
      "category": "Core",
      "summary": "This TIP is to optimize the block verification logic to reduce block processing time. According to statistics, the verification of each transaction takes about 3ms on average. After analysis, the verification of the transaction takes up nearly one-third of the time during the entire block processing...",
      "id": "TIP-276",
      "number": 276,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-276.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-276.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize block verification logic",
      "status": "Final",
      "author": "lucas.wu@tron.network",
      "created": "2021-06-03",
      "type": "Unknown",
      "category": "Core",
      "summary": "This TIP is to optimize the block verification logic to reduce block processing time. According to statistics, the verification of each transaction takes about 3ms on average. After analysis, the verification of the transaction takes up nearly one-third of the time during the entire block processing...",
      "id": "TIP-276",
      "number": 276,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-276.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-276.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Compatible with EVM",
      "status": "Final",
      "author": "yanghang8612<yanghang8612@163.com>",
      "created": "2021-06-01",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide compatibility with Ethereum Virtual Machine. TRON Virtual Machine (TVM) is a lightweight, Turing complete virtual machine developed for the TRON's ecosystem. Its goal is to provide millions of global developers with a custom-built blockchain system that is efficient, convenient, stable, s...",
      "id": "TIP-272",
      "number": 272,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-272.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-272.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Compatible with EVM",
      "status": "Final",
      "author": "yanghang8612<yanghang8612@163.com>",
      "created": "2021-06-01",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide compatibility with Ethereum Virtual Machine. TRON Virtual Machine (TVM) is a lightweight, Turing complete virtual machine developed for the TRON's ecosystem. Its goal is to provide millions of global developers with a custom-built blockchain system that is efficient, convenient, stable, s...",
      "id": "TIP-272",
      "number": 272,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-272.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-272.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Compatible with EVM",
      "status": "Final",
      "author": "yanghang8612<yanghang8612@163.com>",
      "created": "2021-06-01",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide compatibility with Ethereum Virtual Machine. TRON Virtual Machine (TVM) is a lightweight, Turing complete virtual machine developed for the TRON's ecosystem. Its goal is to provide millions of global developers with a custom-built blockchain system that is efficient, convenient, stable, s...",
      "id": "TIP-272",
      "number": 272,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-272.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-272.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Vote for SR in Smart Contract",
      "status": "Final",
      "author": "yanghang8612<yanghang8612@163.com>",
      "created": "2021-06-01",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide vote related operations in TVM. `VoteWitness` & `WithdrawReward` operations in system contract are introduced, smart contract can vote for witness and get reward from the system. Common user can vote for activated witness to share the block reward. However, non-privatekey accounts, like s...",
      "id": "TIP-271",
      "number": 271,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-271.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-271.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Vote for SR in Smart Contract",
      "status": "Final",
      "author": "yanghang8612<yanghang8612@163.com>",
      "created": "2021-06-01",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide vote related operations in TVM. `VoteWitness` & `WithdrawReward` operations in system contract are introduced, smart contract can vote for witness and get reward from the system. Common user can vote for activated witness to share the block reward. However, non-privatekey accounts, like s...",
      "id": "TIP-271",
      "number": 271,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-271.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-271.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Vote for SR in Smart Contract",
      "status": "Final",
      "author": "yanghang8612<yanghang8612@163.com>",
      "created": "2021-06-01",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide vote related operations in TVM. `VoteWitness` & `WithdrawReward` operations in system contract are introduced, smart contract can vote for witness and get reward from the system. Common user can vote for activated witness to share the block reward. However, non-privatekey accounts, like s...",
      "id": "TIP-271",
      "number": 271,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-271.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-271.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize the performance of block processing",
      "status": "Fnial",
      "author": "kayle.liu",
      "created": "2021-05-21",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP is to optimize the block processing speed. Through the performance analysis of the block processing, it was found that the slower execution time of payStandbyWitness in the block processing is due to the fact that more queries and deserialization operations are taken up by the sorting opera...",
      "id": "TIP-269",
      "number": 269,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-269.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-269.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize the performance of block processing",
      "status": "Fnial",
      "author": "kayle.liu",
      "created": "2021-05-21",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP is to optimize the block processing speed. Through the performance analysis of the block processing, it was found that the slower execution time of payStandbyWitness in the block processing is due to the fact that more queries and deserialization operations are taken up by the sorting opera...",
      "id": "TIP-269",
      "number": 269,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-269.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-269.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize the performance of block processing",
      "status": "Fnial",
      "author": "kayle.liu",
      "created": "2021-05-21",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP is to optimize the block processing speed. Through the performance analysis of the block processing, it was found that the slower execution time of payStandbyWitness in the block processing is due to the fact that more queries and deserialization operations are taken up by the sorting opera...",
      "id": "TIP-269",
      "number": 269,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-269.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-269.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "SmartContract ABI optimization",
      "status": "Final",
      "author": "yanghang8612",
      "created": "2021-05-19",
      "type": "Standards Track",
      "category": "VM",
      "summary": "Move ABI out of SmartContract and store it in a new ABI store. The ABI field is totally indeed when the TVM executing SmartContract. Moving out ABI can reduce execution time of some opcodes such as `EXTCODEHASH` `SLOAD` `SSTORE` `ISCONTRACT` `CREATE` and `CREATE2`. Add a new store called ABI Store. ...",
      "id": "TIP-268",
      "number": 268,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-268.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-268.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "SmartContract ABI optimization",
      "status": "Final",
      "author": "yanghang8612",
      "created": "2021-05-19",
      "type": "Standards Track",
      "category": "VM",
      "summary": "Move ABI out of SmartContract and store it in a new ABI store. The ABI field is totally indeed when the TVM executing SmartContract. Moving out ABI can reduce execution time of some opcodes such as `EXTCODEHASH` `SLOAD` `SSTORE` `ISCONTRACT` `CREATE` and `CREATE2`. Add a new store called ABI Store. ...",
      "id": "TIP-268",
      "number": 268,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-268.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-268.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "SmartContract ABI optimization",
      "status": "Final",
      "author": "yanghang8612",
      "created": "2021-05-19",
      "type": "Standards Track",
      "category": "VM",
      "summary": "Move ABI out of SmartContract and store it in a new ABI store. The ABI field is totally indeed when the TVM executing SmartContract. Moving out ABI can reduce execution time of some opcodes such as `EXTCODEHASH` `SLOAD` `SSTORE` `ISCONTRACT` `CREATE` and `CREATE2`. Add a new store called ABI Store. ...",
      "id": "TIP-268",
      "number": 268,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-268.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-268.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Include transaction results on the chain",
      "status": "Final",
      "author": "Andy",
      "created": "2021-04-06",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP provides Include transaction results on the chain for java-tron. Currently, the result of transaction execution is written in the block. But there is no signature, so it can be tampered with. The tampered block will cause other nodes to think it is a bad block. Then disconnect the node conn...",
      "id": "TIP-250",
      "number": 250,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-250.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-250.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Include transaction results on the chain",
      "status": "Final",
      "author": "Andy",
      "created": "2021-04-06",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP provides Include transaction results on the chain for java-tron. Currently, the result of transaction execution is written in the block. But there is no signature, so it can be tampered with. The tampered block will cause other nodes to think it is a bad block. Then disconnect the node conn...",
      "id": "TIP-250",
      "number": 250,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-250.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-250.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Include transaction results on the chain",
      "status": "Final",
      "author": "Andy",
      "created": "2021-04-06",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This TIP provides Include transaction results on the chain for java-tron. Currently, the result of transaction execution is written in the block. But there is no signature, so it can be tampered with. The tampered block will cause other nodes to think it is a bad block. Then disconnect the node conn...",
      "id": "TIP-250",
      "number": 250,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-250.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-250.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Adaptation to solidity-v0.5.16",
      "status": "Draft",
      "author": "yanghang8612<yanghang8612@163.com>",
      "created": "2021-03-08",
      "type": "Standards Track",
      "category": "VM",
      "summary": "An adaptation to solidity-v0.5.16 Ethereum released version 0.5.16 of solidity to fix a bug. Solidity in tron should be updated to follow this release. The release of solidity-v0.5.16 means this bugfix about Yul Optimizer is very necessary. We should update solidity to follow this release as soon as...",
      "id": "TIP-241",
      "number": 241,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-241.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-241.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Adaptation to solidity-v0.5.16",
      "status": "Draft",
      "author": "yanghang8612<yanghang8612@163.com>",
      "created": "2021-03-08",
      "type": "Standards Track",
      "category": "VM",
      "summary": "An adaptation to solidity-v0.5.16 Ethereum released version 0.5.16 of solidity to fix a bug. Solidity in tron should be updated to follow this release. The release of solidity-v0.5.16 means this bugfix about Yul Optimizer is very necessary. We should update solidity to follow this release as soon as...",
      "id": "TIP-241",
      "number": 241,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-241.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-241.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Improve transaction execution speed",
      "status": "Final",
      "author": "Kiven",
      "created": "2021-01-06",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP provides Improve transaction execution speed for java-tron. In the current Tron ecosystem, the destroyed TRX is transferred to the black hole account. When performing transfers, the black hole account needs to be serialized and deserialized. Since the black hole account contains less TRC10 ...",
      "id": "TIP-222",
      "number": 222,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-222.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-222.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Improve transaction execution speed",
      "status": "Final",
      "author": "Kiven",
      "created": "2021-01-06",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP provides Improve transaction execution speed for java-tron. In the current Tron ecosystem, the destroyed TRX is transferred to the black hole account. When performing transfers, the black hole account needs to be serialized and deserialized. Since the black hole account contains less TRC10 ...",
      "id": "TIP-222",
      "number": 222,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-222.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-222.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Improve transaction execution speed",
      "status": "Final",
      "author": "Kiven",
      "created": "2021-01-06",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP provides Improve transaction execution speed for java-tron. In the current Tron ecosystem, the destroyed TRX is transferred to the black hole account. When performing transfers, the black hole account needs to be serialized and deserialized. Since the black hole account contains less TRC10 ...",
      "id": "TIP-222",
      "number": 222,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-222.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-222.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Adapt to Solidity 0.6.0.",
      "status": "Final",
      "author": "neo",
      "created": "2020-12-07",
      "type": "Standards Track",
      "category": "VM",
      "summary": "Adapt to Solidity 0.6.0. Update Java-Tron and Tron solidity compiler adapt to solidity 0.6.0. Solidity 0.6.0 provides many features which can improve development efficiency and safety. Solidity 0.6.0 is a major breaking release of the Solidity compiler and language. Changes include explicit virtual ...",
      "id": "TIP-209",
      "number": 209,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-209.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-209.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Adapt to Solidity 0.6.0.",
      "status": "Final",
      "author": "neo",
      "created": "2020-12-07",
      "type": "Standards Track",
      "category": "VM",
      "summary": "Adapt to Solidity 0.6.0. Update Java-Tron and Tron solidity compiler adapt to solidity 0.6.0. Solidity 0.6.0 provides many features which can improve development efficiency and safety. Solidity 0.6.0 is a major breaking release of the Solidity compiler and language. Changes include explicit virtual ...",
      "id": "TIP-209",
      "number": 209,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-209.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-209.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Adapt to Solidity 0.6.0.",
      "status": "Final",
      "author": "neo",
      "created": "2020-12-07",
      "type": "Standards Track",
      "category": "VM",
      "summary": "Adapt to Solidity 0.6.0. Update Java-Tron and Tron solidity compiler adapt to solidity 0.6.0. Solidity 0.6.0 provides many features which can improve development efficiency and safety. Solidity 0.6.0 is a major breaking release of the Solidity compiler and language. Changes include explicit virtual ...",
      "id": "TIP-209",
      "number": 209,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-209.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-209.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "A proposal to improve network resources model",
      "status": "Final",
      "author": "sean",
      "created": "2020-03-26",
      "type": "Standards Track",
      "category": "core",
      "summary": "This proposal proposes a new scheme to try to solve the problem of the low utilization rate of network frozen resources, reduce user usage costs, and improve resource models. This optimization may lead to more accounts freezing TRX to obtain resources and further increase the TVL of the TRON network...",
      "id": "TIP-207",
      "number": 207,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-207.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-207.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "A proposal to improve network resources model",
      "status": "Final",
      "author": "sean",
      "created": "2020-03-26",
      "type": "Standards Track",
      "category": "core",
      "summary": "This proposal proposes a new scheme to try to solve the problem of the low utilization rate of network frozen resources, reduce user usage costs, and improve resource models. This optimization may lead to more accounts freezing TRX to obtain resources and further increase the TVL of the TRON network...",
      "id": "TIP-207",
      "number": 207,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-207.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-207.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "A proposal to improve network resources model",
      "status": "Final",
      "author": "sean",
      "created": "2020-03-26",
      "type": "Standards Track",
      "category": "core",
      "summary": "This proposal proposes a new scheme to try to solve the problem of the low utilization rate of network frozen resources, reduce user usage costs, and improve resource models. This optimization may lead to more accounts freezing TRX to obtain resources and further increase the TVL of the TRON network...",
      "id": "TIP-207",
      "number": 207,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-207.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-207.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Make MAX_FEE_LIMIT configurable as a chain property",
      "status": "Final",
      "author": "yanghang8612<yanghang8612@163.com>",
      "created": "2020-12-07",
      "type": "Standards Track",
      "category": "VM",
      "summary": "MAX_FEE_LIMIT Should be Configurable. Fixed `MAX_FEE_LIMIT` is not suitable as the cost of energy increases a lot recently. So we should make `MAX_FEE_LIMIT`  configurable in order to adjust dynamically. As the cost of energy increased, in some cases, `MAX_FEE_LIMIT` may be insufficient. So we shoul...",
      "id": "TIP-204",
      "number": 204,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-204.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-204.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Make MAX_FEE_LIMIT configurable as a chain property",
      "status": "Final",
      "author": "yanghang8612<yanghang8612@163.com>",
      "created": "2020-12-07",
      "type": "Standards Track",
      "category": "VM",
      "summary": "MAX_FEE_LIMIT Should be Configurable. Fixed `MAX_FEE_LIMIT` is not suitable as the cost of energy increases a lot recently. So we should make `MAX_FEE_LIMIT`  configurable in order to adjust dynamically. As the cost of energy increased, in some cases, `MAX_FEE_LIMIT` may be insufficient. So we shoul...",
      "id": "TIP-204",
      "number": 204,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-204.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-204.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Make MAX_FEE_LIMIT configurable as a chain property",
      "status": "Final",
      "author": "yanghang8612<yanghang8612@163.com>",
      "created": "2020-12-07",
      "type": "Standards Track",
      "category": "VM",
      "summary": "MAX_FEE_LIMIT Should be Configurable. Fixed `MAX_FEE_LIMIT` is not suitable as the cost of energy increases a lot recently. So we should make `MAX_FEE_LIMIT`  configurable in order to adjust dynamically. As the cost of energy increased, in some cases, `MAX_FEE_LIMIT` may be insufficient. So we shoul...",
      "id": "TIP-204",
      "number": 204,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-204.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-204.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Adaptation to solidity-v0.5.15",
      "status": "Final",
      "author": "yanghang8612<yanghang8612@163.com>",
      "created": "2020-12-03",
      "type": "Standards Track",
      "category": "VM",
      "summary": "An adaptation to solidity-v0.5.15 Ethereum released version 0.5.15 of solidity to fix a bug. Solidity in tron should be updated to follow this release. The release of solidity-v0.5.15 means this bugfix about Yul Optimizer is very necessary. We should update solidity to follow this release as soon as...",
      "id": "TIP-203",
      "number": 203,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-203.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-203.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Adaptation to solidity-v0.5.15",
      "status": "Final",
      "author": "yanghang8612<yanghang8612@163.com>",
      "created": "2020-12-03",
      "type": "Standards Track",
      "category": "VM",
      "summary": "An adaptation to solidity-v0.5.15 Ethereum released version 0.5.15 of solidity to fix a bug. Solidity in tron should be updated to follow this release. The release of solidity-v0.5.15 means this bugfix about Yul Optimizer is very necessary. We should update solidity to follow this release as soon as...",
      "id": "TIP-203",
      "number": 203,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-203.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-203.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Reward SRs with the transaction fees charged for bandwidth and Energy",
      "status": "Final",
      "author": "sean",
      "created": "2020-12-06",
      "type": "Standards Track",
      "category": "core",
      "summary": "Reward SRs with the transaction fees charged for bandwidth and Energy. With the development of the TRON network, the TRON network ecosystem has become increasingly prosperous. At the same time, SR (Super Representatives) also need to consume more resources to maintain the entire network,...",
      "id": "TIP-196",
      "number": 196,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-196.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-196.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Reward SRs with the transaction fees charged for bandwidth and Energy",
      "status": "Final",
      "author": "sean",
      "created": "2020-12-06",
      "type": "Standards Track",
      "category": "core",
      "summary": "Reward SRs with the transaction fees charged for bandwidth and Energy. With the development of the TRON network, the TRON network ecosystem has become increasingly prosperous. At the same time, SR (Super Representatives) also need to consume more resources to maintain the entire network,...",
      "id": "TIP-196",
      "number": 196,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-196.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-196.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Reward SRs with the transaction fees charged for bandwidth and Energy",
      "status": "Final",
      "author": "sean",
      "created": "2020-12-06",
      "type": "Standards Track",
      "category": "core",
      "summary": "Reward SRs with the transaction fees charged for bandwidth and Energy. With the development of the TRON network, the TRON network ecosystem has become increasingly prosperous. At the same time, SR (Super Representatives) also need to consume more resources to maintain the entire network,...",
      "id": "TIP-196",
      "number": 196,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-196.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-196.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Signed Data Standard",
      "status": "Final",
      "author": "yanghang8612@163.com",
      "created": "2022-07-25",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP proposes a specification about how to handle signed data in TRON contracts. Off-chain message signing for use on-chain now is widely used by some multisignature wallet implementations and tokens with `permit` method. However, there is currently no standard for off-chain message signing for ...",
      "id": "TIP-191",
      "number": 191,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-191.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-191.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Signed Data Standard",
      "status": "Final",
      "author": "yanghang8612@163.com",
      "created": "2022-07-25",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP proposes a specification about how to handle signed data in TRON contracts. Off-chain message signing for use on-chain now is widely used by some multisignature wallet implementations and tokens with `permit` method. However, there is currently no standard for off-chain message signing for ...",
      "id": "TIP-191",
      "number": 191,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-191.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-191.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Signed Data Standard",
      "status": "Final",
      "author": "yanghang8612@163.com",
      "created": "2022-07-25",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP proposes a specification about how to handle signed data in TRON contracts. Off-chain message signing for use on-chain now is widely used by some multisignature wallet implementations and tokens with `permit` method. However, there is currently no standard for off-chain message signing for ...",
      "id": "TIP-191",
      "number": 191,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-191.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-191.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TOKENISSUE and UPDATEASSET Instruction in TVM",
      "status": "Draft",
      "author": "taihao.fu@gmail.com",
      "created": "2020-08-12",
      "type": "Standards Track",
      "category": "Core",
      "summary": "To provide TOKENISSUE and UPDATEASSET Instructions in TVM. Provide TRC10 asset issue and update functionalities for smart contract. Asset issued  in smart contract is feasible for developers to provide asset management according to a smart contract status. Asset issue related instruction is a big pl...",
      "id": "TIP-178",
      "number": 178,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-178.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-178.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TOKENISSUE and UPDATEASSET Instruction in TVM",
      "status": "Draft",
      "author": "taihao.fu@gmail.com",
      "created": "2020-08-12",
      "type": "Standards Track",
      "category": "Core",
      "summary": "To provide TOKENISSUE and UPDATEASSET Instructions in TVM. Provide TRC10 asset issue and update functionalities for smart contract. Asset issued  in smart contract is feasible for developers to provide asset management according to a smart contract status. Asset issue related instruction is a big pl...",
      "id": "TIP-178",
      "number": 178,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-178.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-178.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TOKENISSUE and UPDATEASSET Instruction in TVM",
      "status": "Draft",
      "author": "taihao.fu@gmail.com",
      "created": "2020-08-12",
      "type": "Standards Track",
      "category": "Core",
      "summary": "To provide TOKENISSUE and UPDATEASSET Instructions in TVM. Provide TRC10 asset issue and update functionalities for smart contract. Asset issued  in smart contract is feasible for developers to provide asset management according to a smart contract status. Asset issue related instruction is a big pl...",
      "id": "TIP-178",
      "number": 178,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-178.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-178.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "altbn128 operation energy reduction in TVM",
      "status": "LastCall",
      "author": "taihao.fu@gmail.com",
      "created": "2020-08-12",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide altbn128 related operations energy reduction in TVM. Precompile contracts altbn128 addition/multiplication/pairing energy reduction. Use latest research result and improve user experience when trigger contract contains `altbn128` functionalities. Also avoid to hit 1000 TRX feelimit and in...",
      "id": "TIP-176",
      "number": 176,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-176.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-176.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "altbn128 operation energy reduction in TVM",
      "status": "LastCall",
      "author": "taihao.fu@gmail.com",
      "created": "2020-08-12",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide altbn128 related operations energy reduction in TVM. Precompile contracts altbn128 addition/multiplication/pairing energy reduction. Use latest research result and improve user experience when trigger contract contains `altbn128` functionalities. Also avoid to hit 1000 TRX feelimit and in...",
      "id": "TIP-176",
      "number": 176,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-176.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-176.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "altbn128 operation energy reduction in TVM",
      "status": "LastCall",
      "author": "taihao.fu@gmail.com",
      "created": "2020-08-12",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide altbn128 related operations energy reduction in TVM. Precompile contracts altbn128 addition/multiplication/pairing energy reduction. Use latest research result and improve user experience when trigger contract contains `altbn128` functionalities. Also avoid to hit 1000 TRX feelimit and in...",
      "id": "TIP-176",
      "number": 176,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-176.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-176.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "SELFBALANCE instructions in TVM",
      "status": "Final",
      "author": "taihao.fu@gmail.com",
      "created": "2020-08-12",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide SELFBALANCE instruction in TVM. This is value can directly get current address balance. Currently we have `BALANCE` to get TRX value for a specific address. We may consider to increase `BALANCE` energy cost in future for security purpose. But balance for current address is usually conside...",
      "id": "TIP-175",
      "number": 175,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-175.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-175.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "SELFBALANCE instructions in TVM",
      "status": "Final",
      "author": "taihao.fu@gmail.com",
      "created": "2020-08-12",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide SELFBALANCE instruction in TVM. This is value can directly get current address balance. Currently we have `BALANCE` to get TRX value for a specific address. We may consider to increase `BALANCE` energy cost in future for security purpose. But balance for current address is usually conside...",
      "id": "TIP-175",
      "number": 175,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-175.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-175.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "SELFBALANCE instructions in TVM",
      "status": "Final",
      "author": "taihao.fu@gmail.com",
      "created": "2020-08-12",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide SELFBALANCE instruction in TVM. This is value can directly get current address balance. Currently we have `BALANCE` to get TRX value for a specific address. We may consider to increase `BALANCE` energy cost in future for security purpose. But balance for current address is usually conside...",
      "id": "TIP-175",
      "number": 175,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-175.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-175.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "CHAINID instructions in TVM",
      "status": "Final",
      "author": "taihao.fu@gmail.com",
      "created": "2020-08-12",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide CHAINID instruction in TVM. This is value can be read from smart contract to distinguish current chain with other chains. Currently we have multiple chains in TRON ecosystem those are build from 3 main ways: testnets, side-chain and cross-chains.From smart contract perspective, currently ...",
      "id": "TIP-174",
      "number": 174,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-174.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-174.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "CHAINID instructions in TVM",
      "status": "Final",
      "author": "taihao.fu@gmail.com",
      "created": "2020-08-12",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide CHAINID instruction in TVM. This is value can be read from smart contract to distinguish current chain with other chains. Currently we have multiple chains in TRON ecosystem those are build from 3 main ways: testnets, side-chain and cross-chains.From smart contract perspective, currently ...",
      "id": "TIP-174",
      "number": 174,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-174.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-174.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "CHAINID instructions in TVM",
      "status": "Final",
      "author": "taihao.fu@gmail.com",
      "created": "2020-08-12",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide CHAINID instruction in TVM. This is value can be read from smart contract to distinguish current chain with other chains. Currently we have multiple chains in TRON ecosystem those are build from 3 main ways: testnets, side-chain and cross-chains.From smart contract perspective, currently ...",
      "id": "TIP-174",
      "number": 174,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-174.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-174.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "STAKE instructions in TVM",
      "status": "Draft",
      "author": "taihao.fu@gmail.com",
      "created": "2020-08-05",
      "type": "Standards Track",
      "category": "Core",
      "summary": "To provide Staking operations in TVM. This is a simplified solution for PoS incentive mechanism in smart contract. Current mechanism allows a normal privatkey address to vote for SR and get dividend, while TRX locked in smart contract can't get benefit from the mechanism. This TIP introduced a new w...",
      "id": "TIP-171",
      "number": 171,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-171.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-171.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "STAKE instructions in TVM",
      "status": "Draft",
      "author": "taihao.fu@gmail.com",
      "created": "2020-08-05",
      "type": "Standards Track",
      "category": "Core",
      "summary": "To provide Staking operations in TVM. This is a simplified solution for PoS incentive mechanism in smart contract. Current mechanism allows a normal privatkey address to vote for SR and get dividend, while TRX locked in smart contract can't get benefit from the mechanism. This TIP introduced a new w...",
      "id": "TIP-171",
      "number": 171,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-171.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-171.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "STAKE instructions in TVM",
      "status": "Draft",
      "author": "taihao.fu@gmail.com",
      "created": "2020-08-05",
      "type": "Standards Track",
      "category": "Core",
      "summary": "To provide Staking operations in TVM. This is a simplified solution for PoS incentive mechanism in smart contract. Current mechanism allows a normal privatkey address to vote for SR and get dividend, while TRX locked in smart contract can't get benefit from the mechanism. This TIP introduced a new w...",
      "id": "TIP-171",
      "number": 171,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-171.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-171.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-165 Standard Interface Detection In Contract",
      "status": "Draft",
      "author": "timothychung",
      "created": "2020-11-20",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "A standard method to publish and detect what interfaces a smart contract have implemented. This TIP is compatible with [EIP-165](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md), standardize the following in TRON version: 1. How interfaces are identified...",
      "id": "TIP-165",
      "number": 165,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-165.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-165.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-165 Standard Interface Detection In Contract",
      "status": "Draft",
      "author": "timothychung",
      "created": "2020-11-20",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "A standard method to publish and detect what interfaces a smart contract have implemented. This TIP is compatible with [EIP-165](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md), standardize the following in TRON version: 1. How interfaces are identified...",
      "id": "TIP-165",
      "number": 165,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-165.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-165.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-165 Standard Interface Detection In Contract",
      "status": "Draft",
      "author": "timothychung",
      "created": "2020-11-20",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "A standard method to publish and detect what interfaces a smart contract have implemented. This TIP is compatible with [EIP-165](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md), standardize the following in TRON version: 1. How interfaces are identified...",
      "id": "TIP-165",
      "number": 165,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-165.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-165.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Freeze instructions in TVM",
      "status": "Final",
      "author": "taihao.fu@gmail.com",
      "created": "2020-06-03",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide freeze related operations in TVM. Freeze & Unfreeze operation in system contract are introduced, smart contract can freeze and get resource from the system. Common user can freeze TRX to get resource, such as TRON power, bandwidth, energy. However, none privatekey accounts, like smart con...",
      "id": "TIP-157",
      "number": 157,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-157.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-157.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Freeze instructions in TVM",
      "status": "Final",
      "author": "taihao.fu@gmail.com",
      "created": "2020-06-03",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide freeze related operations in TVM. Freeze & Unfreeze operation in system contract are introduced, smart contract can freeze and get resource from the system. Common user can freeze TRX to get resource, such as TRON power, bandwidth, energy. However, none privatekey accounts, like smart con...",
      "id": "TIP-157",
      "number": 157,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-157.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-157.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Freeze instructions in TVM",
      "status": "Final",
      "author": "taihao.fu@gmail.com",
      "created": "2020-06-03",
      "type": "Standards Track",
      "category": "VM",
      "summary": "To provide freeze related operations in TVM. Freeze & Unfreeze operation in system contract are introduced, smart contract can freeze and get resource from the system. Common user can freeze TRX to get resource, such as TRON power, bandwidth, energy. However, none privatekey accounts, like smart con...",
      "id": "TIP-157",
      "number": 157,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-157.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-157.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Vote instructions in TVM",
      "status": "Draft",
      "author": "taihao.fu@gmail.com",
      "created": "2020-06-03",
      "type": "Standards Track",
      "category": "Core",
      "summary": "To provide vote related operations in TVM. Vote & withdrawReward operation in system contract are introduced, smart contract can vote for witness and get reward from the system. Common user can vote for activated witness to get block reward. However, none privatekey accounts, like smart contracts, c...",
      "id": "TIP-156",
      "number": 156,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-156.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-156.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Vote instructions in TVM",
      "status": "Draft",
      "author": "taihao.fu@gmail.com",
      "created": "2020-06-03",
      "type": "Standards Track",
      "category": "Core",
      "summary": "To provide vote related operations in TVM. Vote & withdrawReward operation in system contract are introduced, smart contract can vote for witness and get reward from the system. Common user can vote for activated witness to get block reward. However, none privatekey accounts, like smart contracts, c...",
      "id": "TIP-156",
      "number": 156,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-156.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-156.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Vote instructions in TVM",
      "status": "Draft",
      "author": "taihao.fu@gmail.com",
      "created": "2020-06-03",
      "type": "Standards Track",
      "category": "Core",
      "summary": "To provide vote related operations in TVM. Vote & withdrawReward operation in system contract are introduced, smart contract can vote for witness and get reward from the system. Common user can vote for activated witness to get block reward. However, none privatekey accounts, like smart contracts, c...",
      "id": "TIP-156",
      "number": 156,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-156.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-156.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Pedersen hash function",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2020-03-10",
      "type": "Standards Track",
      "category": "VM",
      "summary": "The TIP provides the Pedersen hash computation function in the shielded TRC-20 contract ([TIP-135](https://github.com/tronprotocol/tips/blob/master/tip-135.md)), which can be used in shielded token transactions. The TIP introduces the `pedersenHash` function, which is used for the computation of Mer...",
      "id": "TIP-138",
      "number": 138,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-138.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-138.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Pedersen hash function",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2020-03-10",
      "type": "Standards Track",
      "category": "VM",
      "summary": "The TIP provides the Pedersen hash computation function in the shielded TRC-20 contract ([TIP-135](https://github.com/tronprotocol/tips/blob/master/tip-135.md)), which can be used in shielded token transactions. The TIP introduces the `pedersenHash` function, which is used for the computation of Mer...",
      "id": "TIP-138",
      "number": 138,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-138.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-138.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Pedersen hash function",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2020-03-10",
      "type": "Standards Track",
      "category": "VM",
      "summary": "The TIP provides the Pedersen hash computation function in the shielded TRC-20 contract ([TIP-135](https://github.com/tronprotocol/tips/blob/master/tip-135.md)), which can be used in shielded token transactions. The TIP introduces the `pedersenHash` function, which is used for the computation of Mer...",
      "id": "TIP-138",
      "number": 138,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-138.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-138.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Zero-knowledge Proof Verification functions",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2020-03-09",
      "type": "Standards Track",
      "category": "VM",
      "summary": "The TIP provides the zero-knowledge proof verification functions in the shielded TRC-20 contract ([TIP-135](https://github.com/tronprotocol/tips/blob/master/tip-135.md)), which can be used in shielded token transactions. The TIP introduces three new functions: `verifyMintProof`, `verifyTransferProof...",
      "id": "TIP-137",
      "number": 137,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-137.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-137.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Zero-knowledge Proof Verification functions",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2020-03-09",
      "type": "Standards Track",
      "category": "VM",
      "summary": "The TIP provides the zero-knowledge proof verification functions in the shielded TRC-20 contract ([TIP-135](https://github.com/tronprotocol/tips/blob/master/tip-135.md)), which can be used in shielded token transactions. The TIP introduces three new functions: `verifyMintProof`, `verifyTransferProof...",
      "id": "TIP-137",
      "number": 137,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-137.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-137.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Zero-knowledge Proof Verification functions",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2020-03-09",
      "type": "Standards Track",
      "category": "VM",
      "summary": "The TIP provides the zero-knowledge proof verification functions in the shielded TRC-20 contract ([TIP-135](https://github.com/tronprotocol/tips/blob/master/tip-135.md)), which can be used in shielded token transactions. The TIP introduces three new functions: `verifyMintProof`, `verifyTransferProof...",
      "id": "TIP-137",
      "number": 137,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-137.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-137.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Shielded TRC-20 Contract",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>,",
      "created": "2020-03-04",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP provides the contract implementation of transforming public TRC-20 token to shielded token, which can guarantee the privacy of token ownership and transactions. The shielded TRC-20 contract has three core modules: `mint`, `transfer` and `burn`. `mint` is used to transform the public TRC-20 ...",
      "id": "TIP-135",
      "number": 135,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-135.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-135.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Shielded TRC-20 Contract",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>,",
      "created": "2020-03-04",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP provides the contract implementation of transforming public TRC-20 token to shielded token, which can guarantee the privacy of token ownership and transactions. The shielded TRC-20 contract has three core modules: `mint`, `transfer` and `burn`. `mint` is used to transform the public TRC-20 ...",
      "id": "TIP-135",
      "number": 135,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-135.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-135.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Shielded TRC-20 Contract",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>,",
      "created": "2020-03-04",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP provides the contract implementation of transforming public TRC-20 token to shielded token, which can guarantee the privacy of token ownership and transactions. The shielded TRC-20 contract has three core modules: `mint`, `transfer` and `burn`. `mint` is used to transform the public TRC-20 ...",
      "id": "TIP-135",
      "number": 135,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-135.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-135.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP128 Lite Fullnode support",
      "status": "LASTCALL",
      "author": "ray.wu",
      "created": "2020-01-21",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This Tip describes a quick startup scheme of FullNode At present, each time when a new FullNode starts, it has to synchronize all the blocks from the Genesis block to the latest block to work properly. As TRON public chain runs stably and the block height increases steadily, such the synchronization...",
      "id": "TIP-128",
      "number": 128,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-128.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-128.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP128 Lite Fullnode support",
      "status": "LASTCALL",
      "author": "ray.wu",
      "created": "2020-01-21",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This Tip describes a quick startup scheme of FullNode At present, each time when a new FullNode starts, it has to synchronize all the blocks from the Genesis block to the latest block to work properly. As TRON public chain runs stably and the block height increases steadily, such the synchronization...",
      "id": "TIP-128",
      "number": 128,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-128.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-128.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP128 Lite Fullnode support",
      "status": "LASTCALL",
      "author": "ray.wu",
      "created": "2020-01-21",
      "type": "Standards Track",
      "category": "Core",
      "summary": "This Tip describes a quick startup scheme of FullNode At present, each time when a new FullNode starts, it has to synchronize all the blocks from the Genesis block to the latest block to work properly. As TRON public chain runs stably and the block height increases steadily, such the synchronization...",
      "id": "TIP-128",
      "number": 128,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-128.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-128.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Support Tron-DEX based on system contracts",
      "status": "Final",
      "author": "sean",
      "created": "2020-08-10",
      "type": "Standards Track",
      "category": "core",
      "summary": "This TIP provides system contracts for the market in java-tron. This TIP provides system contracts to support the exchange of token, including TRX and TRC-10. The main features include an online order table and online matching. Security, transparency, and efficiency have always been at the core of D...",
      "id": "TIP-127",
      "number": 127,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-127.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-127.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Support Tron-DEX based on system contracts",
      "status": "Final",
      "author": "sean",
      "created": "2020-08-10",
      "type": "Standards Track",
      "category": "core",
      "summary": "This TIP provides system contracts for the market in java-tron. This TIP provides system contracts to support the exchange of token, including TRX and TRC-10. The main features include an online order table and online matching. Security, transparency, and efficiency have always been at the core of D...",
      "id": "TIP-127",
      "number": 127,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-127.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-127.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Support Tron-DEX based on system contracts",
      "status": "Final",
      "author": "sean",
      "created": "2020-08-10",
      "type": "Standards Track",
      "category": "core",
      "summary": "This TIP provides system contracts for the market in java-tron. This TIP provides system contracts to support the exchange of token, including TRX and TRC-10. The main features include an online order table and online matching. Security, transparency, and efficiency have always been at the core of D...",
      "id": "TIP-127",
      "number": 127,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-127.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-127.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "ECDSA Signature Encoding Specification",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2020-01-07",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP aims to present clear signature encoding specification to avoid ambiguity in practical applications. The ECDSA signature scheme in [RFC6919](https://tools.ietf.org/html/rfc6979) with elliptic curve [secp256k1](http://www.secg.org/sec2-v2.pdf) returns the signature `(r, s, v)`, where `r` and...",
      "id": "TIP-120",
      "number": 120,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-120.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-120.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "ECDSA Signature Encoding Specification",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2020-01-07",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP aims to present clear signature encoding specification to avoid ambiguity in practical applications. The ECDSA signature scheme in [RFC6919](https://tools.ietf.org/html/rfc6979) with elliptic curve [secp256k1](http://www.secg.org/sec2-v2.pdf) returns the signature `(r, s, v)`, where `r` and...",
      "id": "TIP-120",
      "number": 120,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-120.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-120.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "ECDSA Signature Encoding Specification",
      "status": "Final",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2020-01-07",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP aims to present clear signature encoding specification to avoid ambiguity in practical applications. The ECDSA signature scheme in [RFC6919](https://tools.ietf.org/html/rfc6979) with elliptic curve [secp256k1](http://www.secg.org/sec2-v2.pdf) returns the signature `(r, s, v)`, where `r` and...",
      "id": "TIP-120",
      "number": 120,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-120.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-120.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP-105",
      "status": "Unknown",
      "author": "Unknown",
      "created": "Unknown",
      "type": "Unknown",
      "category": "Unknown",
      "summary": "\n```\ntip: 105 \ntitle: Multi-signature Permission Operation\nauthor: federico<federico.zhen@tron.network>\ndiscussions-to: https://github.com/tronprotocol/tips/issues/105\nstatus: Final\ntype: Standards Tr...",
      "id": "TIP-105",
      "number": 105,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-105.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-105.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP-105",
      "status": "Unknown",
      "author": "Unknown",
      "created": "Unknown",
      "type": "Unknown",
      "category": "Unknown",
      "summary": "\n```\ntip: 105 \ntitle: Multi-signature Permission Operation\nauthor: federico<federico.zhen@tron.network>\ndiscussions-to: https://github.com/tronprotocol/tips/issues/105\nstatus: Final\ntype: Standards Tr...",
      "id": "TIP-105",
      "number": 105,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-105.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-105.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP-105",
      "status": "Unknown",
      "author": "Unknown",
      "created": "Unknown",
      "type": "Unknown",
      "category": "Unknown",
      "summary": "\n```\ntip: 105 \ntitle: Multi-signature Permission Operation\nauthor: federico<federico.zhen@tron.network>\ndiscussions-to: https://github.com/tronprotocol/tips/issues/105\nstatus: Final\ntype: Standards Tr...",
      "id": "TIP-105",
      "number": 105,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-105.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-105.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Data Signing Specification",
      "status": "Last Call",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2019-10-31",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "It not only need to sign the transaction, but also some ordinary bytestrings in practical applications. It is necessary to distinguish the two kinds of data when signing because risks may exist if an attacker tricks users to sign semantically meaningless bytes which can de decoded as a valid transac...",
      "id": "TIP-104",
      "number": 104,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-104.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-104.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Data Signing Specification",
      "status": "Last Call",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2019-10-31",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "It not only need to sign the transaction, but also some ordinary bytestrings in practical applications. It is necessary to distinguish the two kinds of data when signing because risks may exist if an attacker tricks users to sign semantically meaningless bytes which can de decoded as a valid transac...",
      "id": "TIP-104",
      "number": 104,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-104.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-104.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Data Signing Specification",
      "status": "Last Call",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2019-10-31",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "It not only need to sign the transaction, but also some ordinary bytestrings in practical applications. It is necessary to distinguish the two kinds of data when signing because risks may exist if an attacker tricks users to sign semantically meaningless bytes which can de decoded as a valid transac...",
      "id": "TIP-104",
      "number": 104,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-104.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-104.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Hierarchical Deterministic Wallet",
      "status": "Last Call",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2019-10-22",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This proposal defines a mechanism for extending hierarchical deterministic wallets, as described in [BIP32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki) and [BIP44](https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki), to support both Tron's transparent and shielded add...",
      "id": "TIP-102",
      "number": 102,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-102.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-102.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Hierarchical Deterministic Wallet",
      "status": "Last Call",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2019-10-22",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This proposal defines a mechanism for extending hierarchical deterministic wallets, as described in [BIP32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki) and [BIP44](https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki), to support both Tron's transparent and shielded add...",
      "id": "TIP-102",
      "number": 102,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-102.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-102.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Hierarchical Deterministic Wallet",
      "status": "Last Call",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2019-10-22",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This proposal defines a mechanism for extending hierarchical deterministic wallets, as described in [BIP32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki) and [BIP44](https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki), to support both Tron's transparent and shielded add...",
      "id": "TIP-102",
      "number": 102,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-102.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-102.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Wallet Keystore Specification",
      "status": "Last Call",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2019-10-17",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP describes the keystore generation method to store the private key in wallet. Private key is fatally important for users, which should be kept carefully. Mnemonic code specified in [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki) is used to generate the private key, bu...",
      "id": "TIP-101",
      "number": 101,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-101.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-101.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Wallet Keystore Specification",
      "status": "Last Call",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2019-10-17",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP describes the keystore generation method to store the private key in wallet. Private key is fatally important for users, which should be kept carefully. Mnemonic code specified in [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki) is used to generate the private key, bu...",
      "id": "TIP-101",
      "number": 101,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-101.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-101.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Wallet Keystore Specification",
      "status": "Last Call",
      "author": "federico<federico.zhen@tron.network>",
      "created": "2019-10-17",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This TIP describes the keystore generation method to store the private key in wallet. Private key is fatally important for users, which should be kept carefully. Mnemonic code specified in [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki) is used to generate the private key, bu...",
      "id": "TIP-101",
      "number": 101,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-101.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-101.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "tron mix consensus Analytics",
      "status": "Draft",
      "author": "xing@tron.network",
      "created": "2019-12-17",
      "type": "algorithm",
      "category": "Core",
      "summary": "This TIP mainly describes widely used pBFT and give some explanation how it works on tron consensus algorithm. [Optimize pBFT](https://github.com/tronprotocol/tips/blob/master/tp/ticp/ticp-optimized-pbft/ticp-Optimized-PBFT.md) Practical Byzantine Fault Tolerance(pBFT) is designed for reaching a con...",
      "id": "TIP-64",
      "number": 64,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-64.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-64.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Tron consensus algorithm introduction",
      "status": "Draft",
      "author": "xing@tron.network",
      "created": "2019-12-18",
      "type": "algorithm",
      "category": "Core",
      "summary": "This TIP mainly describes tron consensus algorithm- Delegated Proof of Stake (DPoS) as well as gives some related concepts explanation. DPoS , basically, it looks likes a voting system where account holders vote for a few delegates that will secure the network named Super Representative (SR) in tron...",
      "id": "TIP-62",
      "number": 62,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-62.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-62.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-60:Precompiled contract function for multi-signature verification",
      "status": "Final",
      "author": "Sh11thead",
      "created": "2019-09-20",
      "type": "Unknown",
      "category": "Core",
      "summary": "This doc describes a native TVM function which is used to validate multi-signature for a provided account. TRON provided multiple signature functions allowing for permission grading, and each permission can correspond to multiple private keys. But in TVM, currently we only have `ecrecover()` functio...",
      "id": "TIP-60",
      "number": 60,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-60.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-60.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-54: Automatically active non-existent account when transferring TRX/TRC10 asset in a smart contract",
      "status": "Final",
      "author": "Jeancky",
      "created": "2019-08-09",
      "type": "Unknown",
      "category": "TRC",
      "summary": "Currently in TRON's smart contract, when transferring to a non-existent address, the transaction will be failed. This may cause inconvenience to some DApp developers. Let's discuss whether automatic creation of non-existent address should be allowed during contract transfer. Of course, contract call...",
      "id": "TIP-54",
      "number": 54,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-54.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-54.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-54: Automatically active non-existent account when transferring TRX/TRC10 asset in a smart contract",
      "status": "Final",
      "author": "Jeancky",
      "created": "2019-08-09",
      "type": "Unknown",
      "category": "TRC",
      "summary": "Currently in TRON's smart contract, when transferring to a non-existent address, the transaction will be failed. This may cause inconvenience to some DApp developers. Let's discuss whether automatic creation of non-existent address should be allowed during contract transfer. Of course, contract call...",
      "id": "TIP-54",
      "number": 54,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-54.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-54.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-54: Automatically active non-existent account when transferring TRX/TRC10 asset in a smart contract",
      "status": "Final",
      "author": "Jeancky",
      "created": "2019-08-09",
      "type": "Unknown",
      "category": "TRC",
      "summary": "Currently in TRON's smart contract, when transferring to a non-existent address, the transaction will be failed. This may cause inconvenience to some DApp developers. Let's discuss whether automatic creation of non-existent address should be allowed during contract transfer. Of course, contract call...",
      "id": "TIP-54",
      "number": 54,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-54.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-54.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize the current TRON delegation mechanism",
      "status": "Final",
      "author": "lvs007",
      "created": "2019-07-31",
      "type": "Unknown",
      "category": "TRC",
      "summary": "This doc describes a solution to optimize the current TRON delegation mechanism At present, the TRON's delegation mechanism is that the user votes for the node. If the node is elected sr, then each block will reward sr with 32 TRX, and the top 100 votes will receive additional rewards; if the node d...",
      "id": "TIP-53",
      "number": 53,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-53.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-53.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize the current TRON delegation mechanism",
      "status": "Final",
      "author": "lvs007",
      "created": "2019-07-31",
      "type": "Unknown",
      "category": "TRC",
      "summary": "This doc describes a solution to optimize the current TRON delegation mechanism At present, the TRON's delegation mechanism is that the user votes for the node. If the node is elected sr, then each block will reward sr with 32 TRX, and the top 100 votes will receive additional rewards; if the node d...",
      "id": "TIP-53",
      "number": 53,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-53.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-53.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize the current TRON delegation mechanism",
      "status": "Final",
      "author": "lvs007",
      "created": "2019-07-31",
      "type": "Unknown",
      "category": "TRC",
      "summary": "This doc describes a solution to optimize the current TRON delegation mechanism At present, the TRON's delegation mechanism is that the user votes for the node. If the node is elected sr, then each block will reward sr with 32 TRX, and the top 100 votes will receive additional rewards; if the node d...",
      "id": "TIP-53",
      "number": 53,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-53.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-53.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-51 rate limit of API traffic",
      "status": "Final",
      "author": "shydesky<shydesky@gmail.com>",
      "created": "2019-07-30",
      "type": "Standards Track",
      "category": "Interface",
      "summary": "This tip is about the flow limit of the API interface. Limiting the API traffic is necessary to every node which usually has limited resources in the Tron Network. The implementation of the rate limit of API traffic is various, it can be implemented at the firewall level, at the webserver level, or ...",
      "id": "TIP-51",
      "number": 51,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-51.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-51.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-51 rate limit of API traffic",
      "status": "Final",
      "author": "shydesky<shydesky@gmail.com>",
      "created": "2019-07-30",
      "type": "Standards Track",
      "category": "Interface",
      "summary": "This tip is about the flow limit of the API interface. Limiting the API traffic is necessary to every node which usually has limited resources in the Tron Network. The implementation of the rate limit of API traffic is various, it can be implemented at the firewall level, at the webserver level, or ...",
      "id": "TIP-51",
      "number": 51,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-51.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-51.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-51 rate limit of API traffic",
      "status": "Final",
      "author": "shydesky<shydesky@gmail.com>",
      "created": "2019-07-30",
      "type": "Standards Track",
      "category": "Interface",
      "summary": "This tip is about the flow limit of the API interface. Limiting the API traffic is necessary to every node which usually has limited resources in the Tron Network. The implementation of the rate limit of API traffic is various, it can be implemented at the firewall level, at the webserver level, or ...",
      "id": "TIP-51",
      "number": 51,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-51.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-51.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-44 Address.isContract instructions",
      "status": "Final",
      "author": "llwslc<llwslc@gmail.com>",
      "created": "2019-07-10",
      "type": "Unknown",
      "category": "TRC",
      "summary": "To provide a new opcode, which returns the type of the address. This TIP specifies a new opcode, which determines whether the address type is a contract address. Some contracts need to limit its callers, such as some functions can only be called by the user, not by the contract....",
      "id": "TIP-44",
      "number": 44,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-44.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-44.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-44 Address.isContract instructions",
      "status": "Final",
      "author": "llwslc<llwslc@gmail.com>",
      "created": "2019-07-10",
      "type": "Unknown",
      "category": "TRC",
      "summary": "To provide a new opcode, which returns the type of the address. This TIP specifies a new opcode, which determines whether the address type is a contract address. Some contracts need to limit its callers, such as some functions can only be called by the user, not by the contract....",
      "id": "TIP-44",
      "number": 44,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-44.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-44.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-44 Address.isContract instructions",
      "status": "Final",
      "author": "llwslc<llwslc@gmail.com>",
      "created": "2019-07-10",
      "type": "Unknown",
      "category": "TRC",
      "summary": "To provide a new opcode, which returns the type of the address. This TIP specifies a new opcode, which determines whether the address type is a contract address. Some contracts need to limit its callers, such as some functions can only be called by the user, not by the contract....",
      "id": "TIP-44",
      "number": 44,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-44.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-44.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-43: Precompiled contract function for signature parallel verification",
      "status": "Final",
      "author": "Sh11thead<ksl2945@gmail.com>",
      "created": "2019-07-10",
      "type": "Unknown",
      "category": "TRC",
      "summary": "A new type of precompiled contract function for signature parallel verification. Add a new type of build-in precompiled contract function for multisign validating instead of the compiled bytecode do the same task. Since the multi-signature is widely used in Tron, there needs a way for low energy cos...",
      "id": "TIP-43",
      "number": 43,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-43.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-43.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-43: Precompiled contract function for signature parallel verification",
      "status": "Final",
      "author": "Sh11thead<ksl2945@gmail.com>",
      "created": "2019-07-10",
      "type": "Unknown",
      "category": "TRC",
      "summary": "A new type of precompiled contract function for signature parallel verification. Add a new type of build-in precompiled contract function for multisign validating instead of the compiled bytecode do the same task. Since the multi-signature is widely used in Tron, there needs a way for low energy cos...",
      "id": "TIP-43",
      "number": 43,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-43.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-43.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-43: Precompiled contract function for signature parallel verification",
      "status": "Final",
      "author": "Sh11thead<ksl2945@gmail.com>",
      "created": "2019-07-10",
      "type": "Unknown",
      "category": "TRC",
      "summary": "A new type of precompiled contract function for signature parallel verification. Add a new type of build-in precompiled contract function for multisign validating instead of the compiled bytecode do the same task. Since the multi-signature is widely used in Tron, there needs a way for low energy cos...",
      "id": "TIP-43",
      "number": 43,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-43.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-43.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize transactionHistoryStore occupancy space#40",
      "status": "Final",
      "author": "wubin1<wubin1@tron.network>",
      "created": "2019-5-20",
      "type": "Unknown",
      "category": "TRC",
      "summary": "This doc describes the solution of optimizing transactionHistoryStore occupancy space. In current storage model, transaction result saves in transaction history store and it occupies the most space. The optimization merges all transactions in a common block and compression the transaction history sp...",
      "id": "TIP-41",
      "number": 41,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-41.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-41.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize transactionHistoryStore occupancy space#40",
      "status": "Final",
      "author": "wubin1<wubin1@tron.network>",
      "created": "2019-5-20",
      "type": "Unknown",
      "category": "TRC",
      "summary": "This doc describes the solution of optimizing transactionHistoryStore occupancy space. In current storage model, transaction result saves in transaction history store and it occupies the most space. The optimization merges all transactions in a common block and compression the transaction history sp...",
      "id": "TIP-41",
      "number": 41,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-41.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-41.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Optimize transactionHistoryStore occupancy space#40",
      "status": "Final",
      "author": "wubin1<wubin1@tron.network>",
      "created": "2019-5-20",
      "type": "Unknown",
      "category": "TRC",
      "summary": "This doc describes the solution of optimizing transactionHistoryStore occupancy space. In current storage model, transaction result saves in transaction history store and it occupies the most space. The optimization merges all transactions in a common block and compression the transaction history sp...",
      "id": "TIP-41",
      "number": 41,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-41.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-41.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-37: forbid using TransferContract & TransferAssetContract  for contract account",
      "status": "Final",
      "author": "Taihao",
      "created": "2019-05-10",
      "type": "Unknown",
      "category": "TRC",
      "summary": "Forbidding transfer trx/trc10 to a contract account can avoid the misunderstanding of the transfer transaction would executing fallback function in smart contract. Also avoid user misuse system transfer contract to send their asset to a contract and asset would probably be locked in a contract forev...",
      "id": "TIP-37",
      "number": 37,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-37.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-37.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-37: forbid using TransferContract & TransferAssetContract  for contract account",
      "status": "Final",
      "author": "Taihao",
      "created": "2019-05-10",
      "type": "Unknown",
      "category": "TRC",
      "summary": "Forbidding transfer trx/trc10 to a contract account can avoid the misunderstanding of the transfer transaction would executing fallback function in smart contract. Also avoid user misuse system transfer contract to send their asset to a contract and asset would probably be locked in a contract forev...",
      "id": "TIP-37",
      "number": 37,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-37.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-37.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-37: forbid using TransferContract & TransferAssetContract  for contract account",
      "status": "Final",
      "author": "Taihao",
      "created": "2019-05-10",
      "type": "Unknown",
      "category": "TRC",
      "summary": "Forbidding transfer trx/trc10 to a contract account can avoid the misunderstanding of the transfer transaction would executing fallback function in smart contract. Also avoid user misuse system transfer contract to send their asset to a contract and asset would probably be locked in a contract forev...",
      "id": "TIP-37",
      "number": 37,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-37.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-37.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-32 Clear the ABI of contract",
      "status": "Final",
      "author": "llwslc<llwslc@gmail.com>",
      "created": "2019-4-3",
      "type": "Unknown",
      "category": "TRC",
      "summary": "This TIP specifies a new api, which clears the ABI of contract. The contract does not need ABI anymore after the introduction of triggerConstantContract api. A new api, `clearContractABI`, is introduced....",
      "id": "TIP-32",
      "number": 32,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-32.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-32.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-32 Clear the ABI of contract",
      "status": "Final",
      "author": "llwslc<llwslc@gmail.com>",
      "created": "2019-4-3",
      "type": "Unknown",
      "category": "TRC",
      "summary": "This TIP specifies a new api, which clears the ABI of contract. The contract does not need ABI anymore after the introduction of triggerConstantContract api. A new api, `clearContractABI`, is introduced....",
      "id": "TIP-32",
      "number": 32,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-32.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-32.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-32 Clear the ABI of contract",
      "status": "Final",
      "author": "llwslc<llwslc@gmail.com>",
      "created": "2019-4-3",
      "type": "Unknown",
      "category": "TRC",
      "summary": "This TIP specifies a new api, which clears the ABI of contract. The contract does not need ABI anymore after the introduction of triggerConstantContract api. A new api, `clearContractABI`, is introduced....",
      "id": "TIP-32",
      "number": 32,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-32.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-32.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-31 Trigger constant contract",
      "status": "Final",
      "author": "llwslc<llwslc@gmail.com>",
      "created": "2019-4-3",
      "type": "Unknown",
      "category": "TRC",
      "summary": "This TIP specifies a new api, which triggers the constant contract without ABI. Some of contracts are uploaded without the ABI. It is hard to judge whether the function is a constant function or not. So, we must provide an interface for calling the constant function explicitly. A new api,` triggerCo...",
      "id": "TIP-31",
      "number": 31,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-31.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-31.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-31 Trigger constant contract",
      "status": "Final",
      "author": "llwslc<llwslc@gmail.com>",
      "created": "2019-4-3",
      "type": "Unknown",
      "category": "TRC",
      "summary": "This TIP specifies a new api, which triggers the constant contract without ABI. Some of contracts are uploaded without the ABI. It is hard to judge whether the function is a constant function or not. So, we must provide an interface for calling the constant function explicitly. A new api,` triggerCo...",
      "id": "TIP-31",
      "number": 31,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-31.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-31.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-31 Trigger constant contract",
      "status": "Final",
      "author": "llwslc<llwslc@gmail.com>",
      "created": "2019-4-3",
      "type": "Unknown",
      "category": "TRC",
      "summary": "This TIP specifies a new api, which triggers the constant contract without ABI. Some of contracts are uploaded without the ABI. It is hard to judge whether the function is a constant function or not. So, we must provide an interface for calling the constant function explicitly. A new api,` triggerCo...",
      "id": "TIP-31",
      "number": 31,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-31.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-31.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-30 Code hash instructions",
      "status": "Final",
      "author": "llwslc<llwslc@gmail.com>",
      "created": "2019-03-27",
      "type": "Unknown",
      "category": "TRC",
      "summary": "To provide a new opcode, which returns the keccak256 hash of a contract's code. Just like EIP1052 in Ethereum. This TIP specifies a new opcode, which returns the keccak256 hash of a contract's code. Many contracts need to perform checks on a contract's bytecode, but do not necessarily need the bytec...",
      "id": "TIP-30",
      "number": 30,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-30.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-30.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-30 Code hash instructions",
      "status": "Final",
      "author": "llwslc<llwslc@gmail.com>",
      "created": "2019-03-27",
      "type": "Unknown",
      "category": "TRC",
      "summary": "To provide a new opcode, which returns the keccak256 hash of a contract's code. Just like EIP1052 in Ethereum. This TIP specifies a new opcode, which returns the keccak256 hash of a contract's code. Many contracts need to perform checks on a contract's bytecode, but do not necessarily need the bytec...",
      "id": "TIP-30",
      "number": 30,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-30.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-30.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-30 Code hash instructions",
      "status": "Final",
      "author": "llwslc<llwslc@gmail.com>",
      "created": "2019-03-27",
      "type": "Unknown",
      "category": "TRC",
      "summary": "To provide a new opcode, which returns the keccak256 hash of a contract's code. Just like EIP1052 in Ethereum. This TIP specifies a new opcode, which returns the keccak256 hash of a contract's code. Many contracts need to perform checks on a contract's bytecode, but do not necessarily need the bytec...",
      "id": "TIP-30",
      "number": 30,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-30.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-30.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Bitwise shifting instructions in Tron",
      "status": "Final",
      "author": "@ithinker1991",
      "created": "2019-03-07",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "To provide native bitwise shifting with cost on par with other arithmetic operations. Just like EIP145 in Ethereum. Native bitwise shifting instructions are introduced, which are more efficient processing wise on the host and are cheaper to use by a contract. TVM is lacking bitwise shifting operator...",
      "id": "TIP-29",
      "number": 29,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-29.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-29.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Bitwise shifting instructions in Tron",
      "status": "Final",
      "author": "@ithinker1991",
      "created": "2019-03-07",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "To provide native bitwise shifting with cost on par with other arithmetic operations. Just like EIP145 in Ethereum. Native bitwise shifting instructions are introduced, which are more efficient processing wise on the host and are cheaper to use by a contract. TVM is lacking bitwise shifting operator...",
      "id": "TIP-29",
      "number": 29,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-29.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-29.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Bitwise shifting instructions in Tron",
      "status": "Final",
      "author": "@ithinker1991",
      "created": "2019-03-07",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "To provide native bitwise shifting with cost on par with other arithmetic operations. Just like EIP145 in Ethereum. Native bitwise shifting instructions are introduced, which are more efficient processing wise on the host and are cheaper to use by a contract. TVM is lacking bitwise shifting operator...",
      "id": "TIP-29",
      "number": 29,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-29.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-29.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-28 Built-in message queue for event subscribe",
      "status": "Final",
      "author": "jiangyy",
      "created": "2019-03-14",
      "type": "Standards Track",
      "category": "Informational",
      "summary": "Adding built-in message queue for event subscribe in java-tron. The built-in message queue is designed for event subscribe. Developers could subscribe triggers directly from fullnode without event plugin. Developers could use event plugins to subscribe triggers from fullnode, which provide very reli...",
      "id": "TIP-28",
      "number": 28,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-28.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-28.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-28 Built-in message queue for event subscribe",
      "status": "Final",
      "author": "jiangyy",
      "created": "2019-03-14",
      "type": "Standards Track",
      "category": "Informational",
      "summary": "Adding built-in message queue for event subscribe in java-tron. The built-in message queue is designed for event subscribe. Developers could subscribe triggers directly from fullnode without event plugin. Developers could use event plugins to subscribe triggers from fullnode, which provide very reli...",
      "id": "TIP-28",
      "number": 28,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-28.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-28.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-28 Built-in message queue for event subscribe",
      "status": "Final",
      "author": "jiangyy",
      "created": "2019-03-14",
      "type": "Standards Track",
      "category": "Informational",
      "summary": "Adding built-in message queue for event subscribe in java-tron. The built-in message queue is designed for event subscribe. Developers could subscribe triggers directly from fullnode without event plugin. Developers could use event plugins to subscribe triggers from fullnode, which provide very reli...",
      "id": "TIP-28",
      "number": 28,
      "url": "https://github.comhttps://github.com/tronprotocol/TIPs/blob/master/tip-28.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/TIPs/blob/master/tip-28.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP-26",
      "status": "Unknown",
      "author": "Unknown",
      "created": "Unknown",
      "type": "Unknown",
      "category": "Unknown",
      "summary": "## Simple Summary\n\nA new contract creation function called CREATE2.\n\n## Abstract\n\nA new method of creating a contract is proposed where the resulting address can be determined by parties ahead of time...",
      "id": "TIP-26",
      "number": 26,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-26.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-26.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP-26",
      "status": "Unknown",
      "author": "Unknown",
      "created": "Unknown",
      "type": "Unknown",
      "category": "Unknown",
      "summary": "## Simple Summary\n\nA new contract creation function called CREATE2.\n\n## Abstract\n\nA new method of creating a contract is proposed where the resulting address can be determined by parties ahead of time...",
      "id": "TIP-26",
      "number": 26,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-26.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-26.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TIP-26",
      "status": "Unknown",
      "author": "Unknown",
      "created": "Unknown",
      "type": "Unknown",
      "category": "Unknown",
      "summary": "## Simple Summary\n\nA new contract creation function called CREATE2.\n\n## Abstract\n\nA new method of creating a contract is proposed where the resulting address can be determined by parties ahead of time...",
      "id": "TIP-26",
      "number": 26,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-26.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-26.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Implement DB storage with RocksDB",
      "status": "Final(core)",
      "author": "@shydesky",
      "created": "2019-03-04",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "Implement the database storage layer with RocksDB. Currently, the java-Tron project uses LevelDB as the only implement of the database storage layer. This Tip is created for the purpose of adding a new implementation of the database storage layer. RocksDB is a good storage engine built on earlier wo...",
      "id": "TIP-24",
      "number": 24,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-24.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-24.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Implement DB storage with RocksDB",
      "status": "Final(core)",
      "author": "@shydesky",
      "created": "2019-03-04",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "Implement the database storage layer with RocksDB. Currently, the java-Tron project uses LevelDB as the only implement of the database storage layer. This Tip is created for the purpose of adding a new implementation of the database storage layer. RocksDB is a good storage engine built on earlier wo...",
      "id": "TIP-24",
      "number": 24,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-24.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-24.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Implement DB storage with RocksDB",
      "status": "Final(core)",
      "author": "@shydesky",
      "created": "2019-03-04",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "Implement the database storage layer with RocksDB. Currently, the java-Tron project uses LevelDB as the only implement of the database storage layer. This Tip is created for the purpose of adding a new implementation of the database storage layer. RocksDB is a good storage engine built on earlier wo...",
      "id": "TIP-24",
      "number": 24,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-24.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-24.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-23 Add the account world status tree root to the block header",
      "status": "Final",
      "author": "lvs007",
      "created": "2019-03-04",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "The purpose is to verify the consistency of the entire account. Now it's hard to compare the consistency of each account database, so add the account world status tree root to the block header. The purpose is to verify the consistency of the entire account. modify the block header structure, add the...",
      "id": "TIP-23",
      "number": 23,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-23.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-23.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-23 Add the account world status tree root to the block header",
      "status": "Final",
      "author": "lvs007",
      "created": "2019-03-04",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "The purpose is to verify the consistency of the entire account. Now it's hard to compare the consistency of each account database, so add the account world status tree root to the block header. The purpose is to verify the consistency of the entire account. modify the block header structure, add the...",
      "id": "TIP-23",
      "number": 23,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-23.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-23.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-23 Add the account world status tree root to the block header",
      "status": "Final",
      "author": "lvs007",
      "created": "2019-03-04",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "The purpose is to verify the consistency of the entire account. Now it's hard to compare the consistency of each account database, so add the account world status tree root to the block header. The purpose is to verify the consistency of the entire account. modify the block header structure, add the...",
      "id": "TIP-23",
      "number": 23,
      "url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-23.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/tips/blob/master/tip-23.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-20 Token Standard",
      "status": "Final",
      "author": "Marcus",
      "created": "2018-12-01",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "A standard interface for tokens. TVM is compatiable with EVM. TRC20  comes for [ERC20](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md). Thanks the author of ERC20....",
      "id": "TIP-20",
      "number": 20,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-20.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-20.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-20 Token Standard",
      "status": "Final",
      "author": "Marcus",
      "created": "2018-12-01",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "A standard interface for tokens. TVM is compatiable with EVM. TRC20  comes for [ERC20](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md). Thanks the author of ERC20....",
      "id": "TIP-20",
      "number": 20,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-20.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-20.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-20 Token Standard",
      "status": "Final",
      "author": "Marcus",
      "created": "2018-12-01",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "A standard interface for tokens. TVM is compatiable with EVM. TRC20  comes for [ERC20](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md). Thanks the author of ERC20....",
      "id": "TIP-20",
      "number": 20,
      "url": "https://github.comhttps://github.com/tronprotocol/TIPs/blob/master/tip-20.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/TIPs/blob/master/tip-20.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-19 Deferred transaction",
      "status": "Deferred",
      "author": "jiangyy",
      "created": "2019-01-30",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "Deferred transaction will be supported in Tron. Transaction can be delayed and revoked before it expires. This would provide developers with more flexible and efficient experience. Currently, the transaction in Tron will be executed immediately. In certain scenarios, developers need to trigger trans...",
      "id": "TIP-19",
      "number": 19,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-19.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-19.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-19 Deferred transaction",
      "status": "Deferred",
      "author": "jiangyy",
      "created": "2019-01-30",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "Deferred transaction will be supported in Tron. Transaction can be delayed and revoked before it expires. This would provide developers with more flexible and efficient experience. Currently, the transaction in Tron will be executed immediately. In certain scenarios, developers need to trigger trans...",
      "id": "TIP-19",
      "number": 19,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-19.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-19.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-19 Deferred transaction",
      "status": "Deferred",
      "author": "jiangyy",
      "created": "2019-01-30",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "Deferred transaction will be supported in Tron. Transaction can be delayed and revoked before it expires. This would provide developers with more flexible and efficient experience. Currently, the transaction in Tron will be executed immediately. In certain scenarios, developers need to trigger trans...",
      "id": "TIP-19",
      "number": 19,
      "url": "https://github.comhttps://github.com/tronprotocol/TIPs/blob/master/tip-19.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/TIPs/blob/master/tip-19.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Adaptive Energy Limit Model",
      "status": "Final",
      "author": "nanfengpo",
      "created": "2018-12-29",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This doc describes the  standard interface of the Adaptive Energy Limit Model In the current TRON network, the creation and operation of smart contracts require Energy consumption. Energy can only be obtained by freezing TRX, the amount of Energy obtained = TRX/Total TRX * Total Energy Limit of the ...",
      "id": "TIP-17",
      "number": 17,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-17.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-17.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Adaptive Energy Limit Model",
      "status": "Final",
      "author": "nanfengpo",
      "created": "2018-12-29",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This doc describes the  standard interface of the Adaptive Energy Limit Model In the current TRON network, the creation and operation of smart contracts require Energy consumption. Energy can only be obtained by freezing TRX, the amount of Energy obtained = TRX/Total TRX * Total Energy Limit of the ...",
      "id": "TIP-17",
      "number": 17,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-17.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-17.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Adaptive Energy Limit Model",
      "status": "Final",
      "author": "nanfengpo",
      "created": "2018-12-29",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This doc describes the  standard interface of the Adaptive Energy Limit Model In the current TRON network, the creation and operation of smart contracts require Energy consumption. Energy can only be obtained by freezing TRX, the amount of Energy obtained = TRX/Total TRX * Total Energy Limit of the ...",
      "id": "TIP-17",
      "number": 17,
      "url": "https://github.comhttps://github.com/tronprotocol/TIPs/blob/master/tip-17.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/TIPs/blob/master/tip-17.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Account Multi-signature",
      "status": "Final",
      "author": "Marcus",
      "created": "2018-12-27",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This doc describes the  standard interface of Account Multi-signature Standard transactions on cryptocurrency networks can be called single-signature transactions because they require only one digital signature for a transaction to be done. Multi-signature is the requirement that signatures of the t...",
      "id": "TIP-16",
      "number": 16,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-16.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-16.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Account Multi-signature",
      "status": "Final",
      "author": "Marcus",
      "created": "2018-12-27",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This doc describes the  standard interface of Account Multi-signature Standard transactions on cryptocurrency networks can be called single-signature transactions because they require only one digital signature for a transaction to be done. Multi-signature is the requirement that signatures of the t...",
      "id": "TIP-16",
      "number": 16,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-16.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-16.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Account Multi-signature",
      "status": "Final",
      "author": "Marcus",
      "created": "2018-12-27",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This doc describes the  standard interface of Account Multi-signature Standard transactions on cryptocurrency networks can be called single-signature transactions because they require only one digital signature for a transaction to be done. Multi-signature is the requirement that signatures of the t...",
      "id": "TIP-16",
      "number": 16,
      "url": "https://github.comhttps://github.com/tronprotocol/TIPs/blob/master/tip-16.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/TIPs/blob/master/tip-16.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Account System Standard",
      "status": "Final",
      "author": "Justin",
      "created": "2018-12-21",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This doc describes the design of the TRON account system. Account system mainly including account name spec, account name exchange, transfer through account name. Account name will be equal to Address but easier memorize. TRX can only transfer by address....",
      "id": "TIP-13",
      "number": 13,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-13.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-13.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Account System Standard",
      "status": "Final",
      "author": "Justin",
      "created": "2018-12-21",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This doc describes the design of the TRON account system. Account system mainly including account name spec, account name exchange, transfer through account name. Account name will be equal to Address but easier memorize. TRX can only transfer by address....",
      "id": "TIP-13",
      "number": 13,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-13.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-13.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "Account System Standard",
      "status": "Final",
      "author": "Justin",
      "created": "2018-12-21",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This doc describes the design of the TRON account system. Account system mainly including account name spec, account name exchange, transfer through account name. Account name will be equal to Address but easier memorize. TRX can only transfer by address....",
      "id": "TIP-13",
      "number": 13,
      "url": "https://github.comhttps://github.com/tronprotocol/TIPs/blob/master/tip-13.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/TIPs/blob/master/tip-13.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-12 Tron event subscribes model",
      "status": "Final",
      "author": "jiangyy<jiangyangyang@tron.network>",
      "created": "2018-12-20",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This doc describes event subscribe model of Tron. The following describes a model which is used to subscribe to block chain events, transaction events, contract logs and contract events from Tron FullNode. Developers can set up filters to subscribe to specific events. Plug-ins can be developed to ex...",
      "id": "TIP-12",
      "number": 12,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-12.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-12.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-12 Tron event subscribes model",
      "status": "Final",
      "author": "jiangyy<jiangyangyang@tron.network>",
      "created": "2018-12-20",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This doc describes event subscribe model of Tron. The following describes a model which is used to subscribe to block chain events, transaction events, contract logs and contract events from Tron FullNode. Developers can set up filters to subscribe to specific events. Plug-ins can be developed to ex...",
      "id": "TIP-12",
      "number": 12,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-12.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-12.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-12 Tron event subscribes model",
      "status": "Final",
      "author": "jiangyy<jiangyangyang@tron.network>",
      "created": "2018-12-20",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "This doc describes event subscribe model of Tron. The following describes a model which is used to subscribe to block chain events, transaction events, contract logs and contract events from Tron FullNode. Developers can set up filters to subscribe to specific events. Plug-ins can be developed to ex...",
      "id": "TIP-12",
      "number": 12,
      "url": "https://github.comhttps://github.com/tronprotocol/TIPs/blob/master/tip-12.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/TIPs/blob/master/tip-12.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-10 Token Standard",
      "status": "Final",
      "author": "Marcus",
      "created": "2018-11-11",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "A standard interface for tokens. The following standard allows for the implementation of a standard API for tokens on the native chain. This standard provides basic functionality to transfer tokens. A standard interface allows any language to implement the token....",
      "id": "TIP-10",
      "number": 10,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-10.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-10.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-10 Token Standard",
      "status": "Final",
      "author": "Marcus",
      "created": "2018-11-11",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "A standard interface for tokens. The following standard allows for the implementation of a standard API for tokens on the native chain. This standard provides basic functionality to transfer tokens. A standard interface allows any language to implement the token....",
      "id": "TIP-10",
      "number": 10,
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-10.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-10.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "title": "TRC-10 Token Standard",
      "status": "Final",
      "author": "Marcus",
      "created": "2018-11-11",
      "type": "Standards Track",
      "category": "TRC",
      "summary": "A standard interface for tokens. The following standard allows for the implementation of a standard API for tokens on the native chain. This standard provides basic functionality to transfer tokens. A standard interface allows any language to implement the token....",
      "id": "TIP-10",
      "number": 10,
      "url": "https://github.comhttps://github.com/tronprotocol/TIPs/blob/master/tip-10.md",
      "file_url": "https://github.comhttps://github.com/tronprotocol/TIPs/blob/master/tip-10.md",
      "protocol": "tron",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "id": "TIP-1",
      "number": 1,
      "title": "TIP-1",
      "status": "Unknown",
      "author": "Unknown",
      "created": "Unknown",
      "type": "Unknown",
      "category": "Unknown",
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-01.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-01.md",
      "protocol": "tron",
      "summary": "TIP-1 proposal",
      "source": "https://github.com/tronprotocol/TIPs"
    },
    {
      "id": "TIP-1",
      "number": 1,
      "title": "TIP-1",
      "status": "Unknown",
      "author": "Unknown",
      "created": "Unknown",
      "type": "Unknown",
      "category": "Unknown",
      "url": "https://github.com/tronprotocol/tips/blob/master/tip-01.md",
      "file_url": "https://github.com/tronprotocol/tips/blob/master/tip-01.md",
      "protocol": "tron",
      "summary": "TIP-1 proposal",
      "source": "https://github.com/tronprotocol/TIPs"
    }
  ]
}